/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.igrafica.labrado.presion;

//import com.soltelec.dfs.modelo.Medidas;
//import com.soltelec.dfs.modelo.Pruebas;
import com.soltelec.model.Vehiculos;
import com.soltelec.modulopuc.persistencia.conexion.DBUtil;
import dao.PruebasDAO;
import java.awt.Color;
import java.awt.Component;
import java.util.HashMap;
import java.util.Map;
import javax.persistence.EntityManager;
import javax.swing.JTextField;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.lang.invoke.MethodHandles;
import java.sql.SQLException;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;
import modelo.Medidas;

/**
 *
 * @author Luis Berna
 */
public class LabradoPresionLiviano extends javax.swing.JDialog {

    final String regExp = "[0-9]+([,.][0-9]{1,2})?";
    private HashMap<String, Component> componentMap;
    private int idVehiculo;
    private int hojaPruebasActual;
    private int idPrueba;
    java.awt.Frame frame;
    int idUsuario;
    boolean ensenianza;
    boolean aplicTaximetro;
    EntityManager em;
    private PruebasDAO pruebasDAO;
    private Vehiculos vehiculo;

    public LabradoPresionLiviano() {

    }

    /**
     * Creates new form LabradoPresionLiviano
     *
     * @param vehiculo
     * @param em
     */
    public LabradoPresionLiviano(java.awt.Frame frame, boolean modal, int idVehiculo, int hojaPruebasActual, int idPrueba, int idUsuario,
            Vehiculos vehiculo, EntityManager em) {
        super(frame, modal);
        this.idVehiculo = idVehiculo;
        this.hojaPruebasActual = hojaPruebasActual;
        this.idPrueba = idPrueba;
        this.vehiculo = vehiculo;
        initComponents();
        createComponentMap();
        initEventosCheck();
//        cargarDatosDePrueba();
//        validarEjesVehiculo(vehiculo);
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);

        this.frame = frame;
        this.idUsuario = idUsuario;
        this.em = em;
        if (vehiculo.getPesoBruto() != null) {
            lblPesoBruto.setText(vehiculo.getPesoBruto().toString());
        } else {
            lblPesoBruto.setText("");
        }
        pruebasDAO = new PruebasDAO();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        panelEje1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtEje1Izquierda = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtEje1Derecha = new javax.swing.JTextField();
        panelEje4 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        txtEje4Izquierda = new javax.swing.JTextField();
        chkEje4Izquierda = new javax.swing.JCheckBox();
        txtEje4IzquierdaInt = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtEje4Derecha = new javax.swing.JTextField();
        chkEje4Derecha = new javax.swing.JCheckBox();
        txtEje4DerechaInt = new javax.swing.JTextField();
        panelEje2 = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        txtEje2Izquierda = new javax.swing.JTextField();
        chkEje2Izquierda = new javax.swing.JCheckBox();
        txtEje2IzquierdaInt = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtEje2Derecha = new javax.swing.JTextField();
        chkEje2Derecha = new javax.swing.JCheckBox();
        txtEje2DerechaInt = new javax.swing.JTextField();
        panelEje3 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        txtEje3Izquierda = new javax.swing.JTextField();
        chkEje3Izquierda = new javax.swing.JCheckBox();
        txtEje3IzquierdaInt = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        txtEje3Derecha = new javax.swing.JTextField();
        chkEje3Derecha = new javax.swing.JCheckBox();
        txtEje3DerechaInt = new javax.swing.JTextField();
        panelEje5 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        txtEje5Izquierda = new javax.swing.JTextField();
        chkEje5Izquierda = new javax.swing.JCheckBox();
        txtEje5IzquierdaInt = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        txtEje5Derecha = new javax.swing.JTextField();
        chkEje5Derecha = new javax.swing.JCheckBox();
        txtEje5DerechaInt = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        chkRespuesto1 = new javax.swing.JCheckBox();
        txtRepuesto1 = new javax.swing.JTextField();
        jPanel24 = new javax.swing.JPanel();
        chkRespuesto2 = new javax.swing.JCheckBox();
        txtRepuesto2 = new javax.swing.JTextField();
        jPanel25 = new javax.swing.JPanel();
        chkRespuesto3 = new javax.swing.JCheckBox();
        txtRepuesto3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtEje1IzquierdaP = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtEje1DerechaP = new javax.swing.JTextField();
        panelEje4p = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        txtEje4IzquierdaP = new javax.swing.JTextField();
        chkEje4IzquierdaP = new javax.swing.JCheckBox();
        txtEje4IzquierdaIntP = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtEje4DerechaP = new javax.swing.JTextField();
        chkEje4DerechaP = new javax.swing.JCheckBox();
        txtEje4DerechaIntP = new javax.swing.JTextField();
        jPanel27 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        txtEje2IzquierdaP = new javax.swing.JTextField();
        chkEje2IzquierdaP = new javax.swing.JCheckBox();
        txtEje2IzquierdaIntP = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        txtEje2DerechaP = new javax.swing.JTextField();
        chkEje2DerechaP = new javax.swing.JCheckBox();
        txtEje2DerechaIntP = new javax.swing.JTextField();
        panelEje3p = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        txtEje3IzquierdaP = new javax.swing.JTextField();
        chkEje3IzquierdaP = new javax.swing.JCheckBox();
        txtEje3IzquierdaIntP = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        txtEje3DerechaP = new javax.swing.JTextField();
        chkEje3DerechaP = new javax.swing.JCheckBox();
        txtEje3DerechaIntP = new javax.swing.JTextField();
        panelEje5p = new javax.swing.JPanel();
        jLabel40 = new javax.swing.JLabel();
        txtEje5IzquierdaP = new javax.swing.JTextField();
        chkEje5IzquierdaP = new javax.swing.JCheckBox();
        txtEje5IzquierdaIntP = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        txtEje5DerechaP = new javax.swing.JTextField();
        chkEje5DerechaP = new javax.swing.JCheckBox();
        txtEje5DerechaIntP = new javax.swing.JTextField();
        jPanel30 = new javax.swing.JPanel();
        chkRespuesto1P = new javax.swing.JCheckBox();
        txtRepuesto1P = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        chkRespuesto2P = new javax.swing.JCheckBox();
        txtRepuesto2P = new javax.swing.JTextField();
        jPanel32 = new javax.swing.JPanel();
        chkRespuesto3P = new javax.swing.JCheckBox();
        txtRepuesto3P = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPesoBruto = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setPreferredSize(new java.awt.Dimension(833, 800));

        panelEje1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje1.setLayout(new java.awt.GridLayout(1, 0));

        jLabel8.setBackground(new java.awt.Color(204, 204, 204));
        jLabel8.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Izquierda");
        jLabel8.setOpaque(true);
        panelEje1.add(jLabel8);

        txtEje1Izquierda.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje1Izquierda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje1.add(txtEje1Izquierda);

        jLabel9.setBackground(new java.awt.Color(204, 204, 204));
        jLabel9.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Derecha");
        jLabel9.setOpaque(true);
        panelEje1.add(jLabel9);

        txtEje1Derecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje1.add(txtEje1Derecha);

        panelEje4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 4", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje4.setLayout(new java.awt.GridLayout(1, 0));

        jLabel16.setBackground(new java.awt.Color(204, 204, 204));
        jLabel16.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Izquierda");
        jLabel16.setOpaque(true);
        panelEje4.add(jLabel16);

        txtEje4Izquierda.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje4Izquierda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje4.add(txtEje4Izquierda);

        chkEje4Izquierda.setText("Interna");
        chkEje4Izquierda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje4.add(chkEje4Izquierda);

        txtEje4IzquierdaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje4IzquierdaInt.setEnabled(false);
        panelEje4.add(txtEje4IzquierdaInt);

        jLabel17.setBackground(new java.awt.Color(204, 204, 204));
        jLabel17.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Derecha");
        jLabel17.setOpaque(true);
        panelEje4.add(jLabel17);

        txtEje4Derecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje4.add(txtEje4Derecha);

        chkEje4Derecha.setText("Interna");
        chkEje4Derecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje4.add(chkEje4Derecha);

        txtEje4DerechaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje4DerechaInt.setEnabled(false);
        panelEje4.add(txtEje4DerechaInt);

        panelEje2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje2.setLayout(new java.awt.GridLayout(1, 0));

        jLabel30.setBackground(new java.awt.Color(204, 204, 204));
        jLabel30.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Izquierda");
        jLabel30.setOpaque(true);
        panelEje2.add(jLabel30);

        txtEje2Izquierda.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje2Izquierda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje2.add(txtEje2Izquierda);

        chkEje2Izquierda.setText("Interna");
        chkEje2Izquierda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje2.add(chkEje2Izquierda);

        txtEje2IzquierdaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje2IzquierdaInt.setEnabled(false);
        panelEje2.add(txtEje2IzquierdaInt);

        jLabel31.setBackground(new java.awt.Color(204, 204, 204));
        jLabel31.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("Derecha");
        jLabel31.setOpaque(true);
        panelEje2.add(jLabel31);

        txtEje2Derecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje2.add(txtEje2Derecha);

        chkEje2Derecha.setText("Interna");
        chkEje2Derecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chkEje2Derecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEje2DerechaActionPerformed(evt);
            }
        });
        panelEje2.add(chkEje2Derecha);

        txtEje2DerechaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje2DerechaInt.setEnabled(false);
        panelEje2.add(txtEje2DerechaInt);

        panelEje3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje3.setLayout(new java.awt.GridLayout(1, 0));

        jLabel32.setBackground(new java.awt.Color(204, 204, 204));
        jLabel32.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel32.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel32.setText("Izquierda");
        jLabel32.setOpaque(true);
        panelEje3.add(jLabel32);

        txtEje3Izquierda.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje3Izquierda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje3.add(txtEje3Izquierda);

        chkEje3Izquierda.setText("Interna");
        chkEje3Izquierda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje3.add(chkEje3Izquierda);

        txtEje3IzquierdaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje3IzquierdaInt.setEnabled(false);
        panelEje3.add(txtEje3IzquierdaInt);

        jLabel33.setBackground(new java.awt.Color(204, 204, 204));
        jLabel33.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("Derecha");
        jLabel33.setOpaque(true);
        panelEje3.add(jLabel33);

        txtEje3Derecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje3.add(txtEje3Derecha);

        chkEje3Derecha.setText("Interna");
        chkEje3Derecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje3.add(chkEje3Derecha);

        txtEje3DerechaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje3DerechaInt.setEnabled(false);
        panelEje3.add(txtEje3DerechaInt);

        panelEje5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 5", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje5.setLayout(new java.awt.GridLayout(1, 0));

        jLabel34.setBackground(new java.awt.Color(204, 204, 204));
        jLabel34.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Izquierda");
        jLabel34.setOpaque(true);
        panelEje5.add(jLabel34);

        txtEje5Izquierda.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje5Izquierda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje5.add(txtEje5Izquierda);

        chkEje5Izquierda.setText("Interna");
        chkEje5Izquierda.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje5.add(chkEje5Izquierda);

        txtEje5IzquierdaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje5IzquierdaInt.setEnabled(false);
        panelEje5.add(txtEje5IzquierdaInt);

        jLabel35.setBackground(new java.awt.Color(204, 204, 204));
        jLabel35.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Derecha");
        jLabel35.setOpaque(true);
        panelEje5.add(jLabel35);

        txtEje5Derecha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje5.add(txtEje5Derecha);

        chkEje5Derecha.setText("Interna");
        chkEje5Derecha.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje5.add(chkEje5Derecha);

        txtEje5DerechaInt.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje5DerechaInt.setEnabled(false);
        panelEje5.add(txtEje5DerechaInt);

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel23.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto1.setText("Activo");
        chkRespuesto1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel23.add(chkRespuesto1);

        txtRepuesto1.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto1.setEnabled(false);
        jPanel23.add(txtRepuesto1);

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel24.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto2.setText("Activo");
        chkRespuesto2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel24.add(chkRespuesto2);

        txtRepuesto2.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto2.setEnabled(false);
        jPanel24.add(txtRepuesto2);

        jPanel25.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel25.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto3.setText("Activo");
        chkRespuesto3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel25.add(chkRespuesto3);

        txtRepuesto3.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto3.setEnabled(false);
        jPanel25.add(txtRepuesto3);

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Registro profundidad de labrado");
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(panelEje1, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje4, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje2, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje3, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje5, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEje1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(panelEje2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(panelEje3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEje4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(panelEje5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Labrado", jPanel3);

        jPanel4.setPreferredSize(new java.awt.Dimension(833, 800));

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel11.setLayout(new java.awt.GridLayout(1, 0));

        jLabel18.setBackground(new java.awt.Color(204, 204, 204));
        jLabel18.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("Izquierda");
        jLabel18.setOpaque(true);
        jPanel11.add(jLabel18);

        txtEje1IzquierdaP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje1IzquierdaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel11.add(txtEje1IzquierdaP);

        jLabel19.setBackground(new java.awt.Color(204, 204, 204));
        jLabel19.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Derecha");
        jLabel19.setOpaque(true);
        jPanel11.add(jLabel19);

        txtEje1DerechaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel11.add(txtEje1DerechaP);

        panelEje4p.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 4", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje4p.setLayout(new java.awt.GridLayout(1, 0));

        jLabel20.setBackground(new java.awt.Color(204, 204, 204));
        jLabel20.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Izquierda");
        jLabel20.setOpaque(true);
        panelEje4p.add(jLabel20);

        txtEje4IzquierdaP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje4IzquierdaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje4p.add(txtEje4IzquierdaP);

        chkEje4IzquierdaP.setText("Interna");
        chkEje4IzquierdaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje4p.add(chkEje4IzquierdaP);

        txtEje4IzquierdaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje4IzquierdaIntP.setEnabled(false);
        panelEje4p.add(txtEje4IzquierdaIntP);

        jLabel21.setBackground(new java.awt.Color(204, 204, 204));
        jLabel21.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Derecha");
        jLabel21.setOpaque(true);
        panelEje4p.add(jLabel21);

        txtEje4DerechaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje4p.add(txtEje4DerechaP);

        chkEje4DerechaP.setText("Interna");
        chkEje4DerechaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje4p.add(chkEje4DerechaP);

        txtEje4DerechaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje4DerechaIntP.setEnabled(false);
        panelEje4p.add(txtEje4DerechaIntP);

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel27.setLayout(new java.awt.GridLayout(1, 0));

        jLabel36.setBackground(new java.awt.Color(204, 204, 204));
        jLabel36.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Izquierda");
        jLabel36.setOpaque(true);
        jPanel27.add(jLabel36);

        txtEje2IzquierdaP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje2IzquierdaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel27.add(txtEje2IzquierdaP);

        chkEje2IzquierdaP.setText("Interna");
        chkEje2IzquierdaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel27.add(chkEje2IzquierdaP);

        txtEje2IzquierdaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje2IzquierdaIntP.setEnabled(false);
        jPanel27.add(txtEje2IzquierdaIntP);

        jLabel37.setBackground(new java.awt.Color(204, 204, 204));
        jLabel37.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel37.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel37.setText("Derecha");
        jLabel37.setOpaque(true);
        jPanel27.add(jLabel37);

        txtEje2DerechaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel27.add(txtEje2DerechaP);

        chkEje2DerechaP.setText("Interna");
        chkEje2DerechaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel27.add(chkEje2DerechaP);

        txtEje2DerechaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje2DerechaIntP.setEnabled(false);
        jPanel27.add(txtEje2DerechaIntP);

        panelEje3p.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje3p.setLayout(new java.awt.GridLayout(1, 0));

        jLabel38.setBackground(new java.awt.Color(204, 204, 204));
        jLabel38.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel38.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel38.setText("Izquierda");
        jLabel38.setOpaque(true);
        panelEje3p.add(jLabel38);

        txtEje3IzquierdaP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje3IzquierdaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje3p.add(txtEje3IzquierdaP);

        chkEje3IzquierdaP.setText("Interna");
        chkEje3IzquierdaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje3p.add(chkEje3IzquierdaP);

        txtEje3IzquierdaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje3IzquierdaIntP.setEnabled(false);
        txtEje3IzquierdaIntP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEje3IzquierdaIntPActionPerformed(evt);
            }
        });
        panelEje3p.add(txtEje3IzquierdaIntP);

        jLabel39.setBackground(new java.awt.Color(204, 204, 204));
        jLabel39.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel39.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel39.setText("Derecha");
        jLabel39.setOpaque(true);
        panelEje3p.add(jLabel39);

        txtEje3DerechaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje3p.add(txtEje3DerechaP);

        chkEje3DerechaP.setText("Interna");
        chkEje3DerechaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje3p.add(chkEje3DerechaP);

        txtEje3DerechaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje3DerechaIntP.setEnabled(false);
        panelEje3p.add(txtEje3DerechaIntP);

        panelEje5p.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Eje 5", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        panelEje5p.setLayout(new java.awt.GridLayout(1, 0));

        jLabel40.setBackground(new java.awt.Color(204, 204, 204));
        jLabel40.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel40.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel40.setText("Izquierda");
        jLabel40.setOpaque(true);
        panelEje5p.add(jLabel40);

        txtEje5IzquierdaP.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtEje5IzquierdaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje5p.add(txtEje5IzquierdaP);

        chkEje5IzquierdaP.setText("Interna");
        chkEje5IzquierdaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje5p.add(chkEje5IzquierdaP);

        txtEje5IzquierdaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje5IzquierdaIntP.setEnabled(false);
        panelEje5p.add(txtEje5IzquierdaIntP);

        jLabel41.setBackground(new java.awt.Color(204, 204, 204));
        jLabel41.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        jLabel41.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel41.setText("Derecha");
        jLabel41.setOpaque(true);
        panelEje5p.add(jLabel41);

        txtEje5DerechaP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        panelEje5p.add(txtEje5DerechaP);

        chkEje5DerechaP.setText("Interna");
        chkEje5DerechaP.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        panelEje5p.add(chkEje5DerechaP);

        txtEje5DerechaIntP.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtEje5DerechaIntP.setEnabled(false);
        panelEje5p.add(txtEje5DerechaIntP);

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 1", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel30.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto1P.setText("Activo");
        chkRespuesto1P.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel30.add(chkRespuesto1P);

        txtRepuesto1P.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto1P.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto1P.setEnabled(false);
        jPanel30.add(txtRepuesto1P);

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 2", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel31.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto2P.setText("Activo");
        chkRespuesto2P.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel31.add(chkRespuesto2P);

        txtRepuesto2P.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto2P.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto2P.setEnabled(false);
        jPanel31.add(txtRepuesto2P);

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Repuesto 3", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Grande", 0, 18))); // NOI18N
        jPanel32.setLayout(new java.awt.GridLayout(1, 0));

        chkRespuesto3P.setText("Activo");
        chkRespuesto3P.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel32.add(chkRespuesto3P);

        txtRepuesto3P.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        txtRepuesto3P.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRepuesto3P.setEnabled(false);
        jPanel32.add(txtRepuesto3P);

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Registro de presión");
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje4p, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje3p, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(panelEje5p, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 236, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(panelEje3p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelEje4p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(panelEje5p, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel32, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Presión", jPanel4);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        jLabel3.setText("Peso bruto:");
        jLabel3.setOpaque(true);

        lblPesoBruto.setFont(new java.awt.Font("sansserif", 1, 36)); // NOI18N
        lblPesoBruto.setText("900");

        btnSiguiente.setText("SIguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/solt.png"))); // NOI18N

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png"))); // NOI18N

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("Labrado y presión");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1077, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPesoBruto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lblPesoBruto)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed

        System.out.println("---------------------------------------------------");
        System.out.println("--------INSERTANDO MEDIDAS DE LABRADO---------------");
        System.out.println("---------------------------------------------------");

        boolean valido = validarCampos(), ValidacionNumeros = ValidarNumeros();
        //System.out.println("valor de  ValidarNumeros: " + ValidacionNumeros);
        if (!valido) {
            JOptionPane.showMessageDialog(this, "Debe validar las medidas ingresadas", "SART 1.7.3",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!ValidacionNumeros) {
            JOptionPane.showMessageDialog(this, "Por favor valide que los valores ingresados sean validos, recuerde que no pueden haber valores no numericos y/o caracteres especiales", "SART 1.7.3",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        String campos = "(" + Medidas.ID_TIPO_MEDIDA + "," + Medidas.VALOR_MEDIDA + "," + Medidas.ID_PRUEBA + ")";

        for (Map.Entry<String, Component> entry : componentMap.entrySet()) {
            String valorMedida = ((JTextField) entry.getValue()).getText();
            Object tipoMedida = entry.getKey();
           // Object val = entry.getValue();
            double valor = Double.valueOf(valorMedida);
            String valores = "('" + tipoMedida + "','" + valor + "','" + idPrueba + "')";

            System.out.println("----");
            System.out.println("-- tipoMedida: " + tipoMedida + " Valor : " + valor);
            System.out.println("----");

            try {
                DBUtil.insert(Medidas.TABLA, campos, valores);
                //JOptionPane.showMessageDialog(this, "Medidas guardadas correctamente...", "SART 1.7.3",JOptionPane.INFORMATION_MESSAGE);                                                
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al guardar las medidas tomadas", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);

            }
        }
                JOptionPane.showMessageDialog(this, "Medidas guardadas correctamente", "SART 1.7.3", JOptionPane.INFORMATION_MESSAGE);
        dispose();
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void chkEje2DerechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEje2DerechaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkEje2DerechaActionPerformed

    private void txtEje3IzquierdaIntPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEje3IzquierdaIntPActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEje3IzquierdaIntPActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JCheckBox chkEje2Derecha;
    private javax.swing.JCheckBox chkEje2DerechaP;
    private javax.swing.JCheckBox chkEje2Izquierda;
    private javax.swing.JCheckBox chkEje2IzquierdaP;
    private javax.swing.JCheckBox chkEje3Derecha;
    private javax.swing.JCheckBox chkEje3DerechaP;
    private javax.swing.JCheckBox chkEje3Izquierda;
    private javax.swing.JCheckBox chkEje3IzquierdaP;
    private javax.swing.JCheckBox chkEje4Derecha;
    private javax.swing.JCheckBox chkEje4DerechaP;
    private javax.swing.JCheckBox chkEje4Izquierda;
    private javax.swing.JCheckBox chkEje4IzquierdaP;
    private javax.swing.JCheckBox chkEje5Derecha;
    private javax.swing.JCheckBox chkEje5DerechaP;
    private javax.swing.JCheckBox chkEje5Izquierda;
    private javax.swing.JCheckBox chkEje5IzquierdaP;
    private javax.swing.JCheckBox chkRespuesto1;
    private javax.swing.JCheckBox chkRespuesto1P;
    private javax.swing.JCheckBox chkRespuesto2;
    private javax.swing.JCheckBox chkRespuesto2P;
    private javax.swing.JCheckBox chkRespuesto3;
    private javax.swing.JCheckBox chkRespuesto3P;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblPesoBruto;
    private javax.swing.JPanel panelEje1;
    private javax.swing.JPanel panelEje2;
    private javax.swing.JPanel panelEje3;
    private javax.swing.JPanel panelEje3p;
    private javax.swing.JPanel panelEje4;
    private javax.swing.JPanel panelEje4p;
    private javax.swing.JPanel panelEje5;
    private javax.swing.JPanel panelEje5p;
    private javax.swing.JTextField txtEje1Derecha;
    private javax.swing.JTextField txtEje1DerechaP;
    private javax.swing.JTextField txtEje1Izquierda;
    private javax.swing.JTextField txtEje1IzquierdaP;
    private javax.swing.JTextField txtEje2Derecha;
    private javax.swing.JTextField txtEje2DerechaInt;
    private javax.swing.JTextField txtEje2DerechaIntP;
    private javax.swing.JTextField txtEje2DerechaP;
    private javax.swing.JTextField txtEje2Izquierda;
    private javax.swing.JTextField txtEje2IzquierdaInt;
    private javax.swing.JTextField txtEje2IzquierdaIntP;
    private javax.swing.JTextField txtEje2IzquierdaP;
    private javax.swing.JTextField txtEje3Derecha;
    private javax.swing.JTextField txtEje3DerechaInt;
    private javax.swing.JTextField txtEje3DerechaIntP;
    private javax.swing.JTextField txtEje3DerechaP;
    private javax.swing.JTextField txtEje3Izquierda;
    private javax.swing.JTextField txtEje3IzquierdaInt;
    private javax.swing.JTextField txtEje3IzquierdaIntP;
    private javax.swing.JTextField txtEje3IzquierdaP;
    private javax.swing.JTextField txtEje4Derecha;
    private javax.swing.JTextField txtEje4DerechaInt;
    private javax.swing.JTextField txtEje4DerechaIntP;
    private javax.swing.JTextField txtEje4DerechaP;
    private javax.swing.JTextField txtEje4Izquierda;
    private javax.swing.JTextField txtEje4IzquierdaInt;
    private javax.swing.JTextField txtEje4IzquierdaIntP;
    private javax.swing.JTextField txtEje4IzquierdaP;
    private javax.swing.JTextField txtEje5Derecha;
    private javax.swing.JTextField txtEje5DerechaInt;
    private javax.swing.JTextField txtEje5DerechaIntP;
    private javax.swing.JTextField txtEje5DerechaP;
    private javax.swing.JTextField txtEje5Izquierda;
    private javax.swing.JTextField txtEje5IzquierdaInt;
    private javax.swing.JTextField txtEje5IzquierdaIntP;
    private javax.swing.JTextField txtEje5IzquierdaP;
    private javax.swing.JTextField txtRepuesto1;
    private javax.swing.JTextField txtRepuesto1P;
    private javax.swing.JTextField txtRepuesto2;
    private javax.swing.JTextField txtRepuesto2P;
    private javax.swing.JTextField txtRepuesto3;
    private javax.swing.JTextField txtRepuesto3P;
    // End of variables declaration//GEN-END:variables

    private void initEventosCheck() {

        //Labrado
        chkEje2Izquierda.addItemListener(new ChangeCheckLabrado(txtEje2IzquierdaInt));
        chkEje3Izquierda.addItemListener(new ChangeCheckLabrado(txtEje3IzquierdaInt));
        chkEje4Izquierda.addItemListener(new ChangeCheckLabrado(txtEje4IzquierdaInt));
        chkEje5Izquierda.addItemListener(new ChangeCheckLabrado(txtEje5IzquierdaInt));

        chkEje2Derecha.addItemListener(new ChangeCheckLabrado(txtEje2DerechaInt));
        chkEje3Derecha.addItemListener(new ChangeCheckLabrado(txtEje3DerechaInt));
        chkEje4Derecha.addItemListener(new ChangeCheckLabrado(txtEje4DerechaInt));
        chkEje5Derecha.addItemListener(new ChangeCheckLabrado(txtEje5DerechaInt));

        chkRespuesto1.addItemListener(new ChangeCheckLabrado(txtRepuesto1));
        chkRespuesto2.addItemListener(new ChangeCheckLabrado(txtRepuesto2));
        chkRespuesto3.addItemListener(new ChangeCheckLabrado(txtRepuesto3));

        //Presion
        chkEje2IzquierdaP.addItemListener(new ChangeCheckLabrado(txtEje2IzquierdaIntP));
        chkEje3IzquierdaP.addItemListener(new ChangeCheckLabrado(txtEje3IzquierdaIntP));
        chkEje4IzquierdaP.addItemListener(new ChangeCheckLabrado(txtEje4IzquierdaIntP));
        chkEje5IzquierdaP.addItemListener(new ChangeCheckLabrado(txtEje5IzquierdaIntP));

        chkEje2DerechaP.addItemListener(new ChangeCheckLabrado(txtEje2DerechaIntP));
        chkEje3DerechaP.addItemListener(new ChangeCheckLabrado(txtEje3DerechaIntP));
        chkEje4DerechaP.addItemListener(new ChangeCheckLabrado(txtEje4DerechaIntP));
        chkEje5DerechaP.addItemListener(new ChangeCheckLabrado(txtEje5DerechaIntP));

        chkRespuesto1P.addItemListener(new ChangeCheckLabrado(txtRepuesto1P));
        chkRespuesto2P.addItemListener(new ChangeCheckLabrado(txtRepuesto2P));
        chkRespuesto3P.addItemListener(new ChangeCheckLabrado(txtRepuesto3P));
    }

    private void createComponentMap() {
        componentMap = new HashMap<>();
        //componentIntMap = new HashMap<>();

        //Labrado
        componentMap.put("9004", txtEje1Izquierda);
        componentMap.put("9013", txtEje1Derecha);
        componentMap.put("9005", txtEje2Izquierda);
        //componentIntMap.put("9009", txtEje2IzquierdaInt);
        componentMap.put("9014", txtEje2Derecha);
        //componentIntMap.put("9018", txtEje2DerechaInt);

        //Presion
        componentMap.put("9022", txtEje1IzquierdaP);
        componentMap.put("9031", txtEje1DerechaP);
        componentMap.put("9032", txtEje2DerechaP);
        //componentIntMap.put("9036", txtEje2DerechaIntP);
        componentMap.put("9023", txtEje2IzquierdaP);
        //componentIntMap.put("9027", txtEje2IzquierdaIntP);

        switch (vehiculo.getNumeroejes()) {
            case 2:
                panelEje3.setVisible(false);
                panelEje3p.setVisible(false);
                panelEje4.setVisible(false);
                panelEje4p.setVisible(false);
                panelEje5.setVisible(false);
                panelEje5p.setVisible(false);
                break;
            case 3:
                eje3Init(componentMap);
                panelEje4.setVisible(false);
                panelEje4p.setVisible(false);
                panelEje5.setVisible(false);
                panelEje5p.setVisible(false);
                break;
            case 4:
                eje3Init(componentMap);
                eje4Init(componentMap);
                panelEje5.setVisible(false);
                panelEje5p.setVisible(false);
                break;
            case 5:
                eje3Init(componentMap);
                eje4Init(componentMap);
                eje5Init(componentMap);
                break;
        }

    }

    private boolean validarCampos() {
        try {
            validacionEje1();
            switch (vehiculo.getNumeroejes()) {
                case 2:
                    validacionEje2();
                    break;
                case 3:
                    validacionEje2();
                    validacionEje3();
                    break;
                case 4:
                    validacionEje2();
                    validacionEje3();
                    validacionEje4();
                    break;
                case 5:
                    validacionEje2();
                    validacionEje3();
                    validacionEje4();
                    validacionEje5();
                    break;
            }
        } catch (Exception e) {
            return false;
        }
        return true;
    }

    private void eje3Init(HashMap<String, Component> componentMap) {
        componentMap.put("9015", txtEje3Derecha);
        //componentIntMap.put("9019", txtEje3DerechaInt);
        componentMap.put("9006", txtEje3Izquierda);
        //componentIntMap.put("9010", txtEje3IzquierdaInt);

        componentMap.put("9033", txtEje3DerechaP);
        //componentIntMap.put("9037", txtEje3DerechaIntP);
        componentMap.put("9024", txtEje3IzquierdaP);
        //componentIntMap.put("9028", txtEje3IzquierdaIntP);
    }

    private void eje4Init(HashMap<String, Component> componentMap) {
        componentMap.put("9016", txtEje4Derecha);
        //componentIntMap.put("9020", txtEje4DerechaInt);
        componentMap.put("9007", txtEje4Izquierda);
        //componentIntMap.put("9011", txtEje4IzquierdaInt);

        componentMap.put("9034", txtEje4DerechaP);
        //componentIntMap.put("9038", txtEje4DerechaIntP);
        componentMap.put("9025", txtEje4IzquierdaP);
        //componentIntMap.put("9029", txtEje4IzquierdaIntP);
    }

    private void eje5Init(HashMap<String, Component> componentMap) {
        componentMap.put("9017", txtEje5Derecha);
        //componentIntMap.put("9021", txtEje5DerechaInt);
        componentMap.put("9008", txtEje5Izquierda);
        //componentIntMap.put("9012", txtEje5IzquierdaInt);

        componentMap.put("9035", txtEje5DerechaP);
        //componentIntMap.put("9039", txtEje5DerechaIntP);
        componentMap.put("9026", txtEje5IzquierdaP);
        //componentIntMap.put("9030", txtEje5IzquierdaIntP);
    }

    private void validarMedidasLlantasInternas(JCheckBox chkEje2Derecha, JTextField text, String tipoMedida) {
        if (chkEje2Derecha.isSelected()) {
            if ((text.getText() == null || text.getText().isEmpty())) {
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            } else {
                componentMap.put(tipoMedida, text);
            }
        }
    }

    private void validarMedidasLlantas(JTextField text) {
        if (text.getText() == null || text.getText().isEmpty()) {
            throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        }
    }

    private void validacionEje1() {
        validarMedidasLlantas(txtEje1Derecha);
        validarMedidasLlantas(txtEje1Izquierda);
        validarMedidasLlantas(txtEje1DerechaP);
        validarMedidasLlantas(txtEje1IzquierdaP);

        //      validarMedidasLlantasInternas(chkRespuesto1, txtRepuesto1P, "9043");
//        validarMedidasLlantasInternas(chkRespuesto2, txtRepuesto2P, "9044");
//        validarMedidasLlantasInternas(chkRespuesto3, txtRepuesto3P, "9045");
//        
//        validarMedidasLlantasInternas(chkRespuesto1P, txtRepuesto1, "9040");
//        validarMedidasLlantasInternas(chkRespuesto2P, txtRepuesto2, "9041");
//        validarMedidasLlantasInternas(chkRespuesto3P, txtRepuesto3, "9042");
        validarMedidasLlantasInternas(chkRespuesto1, txtRepuesto1, "9040");
        validarMedidasLlantasInternas(chkRespuesto2, txtRepuesto2, "9041");
        validarMedidasLlantasInternas(chkRespuesto3, txtRepuesto3, "9042");

        validarMedidasLlantasInternas(chkRespuesto1P, txtRepuesto1P, "9043");
        validarMedidasLlantasInternas(chkRespuesto2P, txtRepuesto2P, "9044");
        validarMedidasLlantasInternas(chkRespuesto3P, txtRepuesto3P, "9045");

    }

    private void validacionEje2() {
        validarMedidasLlantas(txtEje2Derecha);
        validarMedidasLlantas(txtEje2Izquierda);
        validarMedidasLlantas(txtEje2DerechaP);
        validarMedidasLlantas(txtEje2IzquierdaP);

        validarMedidasLlantasInternas(chkEje2Derecha, txtEje2DerechaInt, "9018");
        validarMedidasLlantasInternas(chkEje2DerechaP, txtEje2DerechaIntP, "9036");
        validarMedidasLlantasInternas(chkEje2Izquierda, txtEje2IzquierdaInt, "9009");
        validarMedidasLlantasInternas(chkEje2IzquierdaP, txtEje2IzquierdaIntP, "9027");
    }

    private void validacionEje3() {
        validarMedidasLlantas(txtEje3Derecha);
        validarMedidasLlantas(txtEje3Izquierda);
        validarMedidasLlantas(txtEje3DerechaP);
        validarMedidasLlantas(txtEje3IzquierdaP);

        validarMedidasLlantasInternas(chkEje3Izquierda, txtEje3IzquierdaInt, "9010");
        validarMedidasLlantasInternas(chkEje3IzquierdaP, txtEje3IzquierdaIntP, "9028");
        validarMedidasLlantasInternas(chkEje3Derecha, txtEje3DerechaInt, "9019");
        validarMedidasLlantasInternas(chkEje3DerechaP, txtEje3DerechaIntP, "9037");
    }

    private void validacionEje4() {
        validarMedidasLlantas(txtEje4Derecha);
        validarMedidasLlantas(txtEje4Izquierda);
        validarMedidasLlantas(txtEje4DerechaP);
        validarMedidasLlantas(txtEje4IzquierdaP);

        validarMedidasLlantasInternas(chkEje4Izquierda, txtEje4IzquierdaInt, "9011");
        validarMedidasLlantasInternas(chkEje4IzquierdaP, txtEje4IzquierdaIntP, "9029");
        validarMedidasLlantasInternas(chkEje4Derecha, txtEje4DerechaInt, "9020");
        validarMedidasLlantasInternas(chkEje4DerechaP, txtEje4DerechaIntP, "9038");
    }

    private void validacionEje5() {
        validarMedidasLlantas(txtEje5Derecha);
        validarMedidasLlantas(txtEje5Izquierda);
        validarMedidasLlantas(txtEje5DerechaP);
        validarMedidasLlantas(txtEje5IzquierdaP);

        validarMedidasLlantasInternas(chkEje5Izquierda, txtEje5IzquierdaInt, "9012");
        validarMedidasLlantasInternas(chkEje5IzquierdaP, txtEje5IzquierdaIntP, "9030");
        validarMedidasLlantasInternas(chkEje5Derecha, txtEje5DerechaInt, "9021");
        validarMedidasLlantasInternas(chkEje5DerechaP, txtEje5DerechaIntP, "9039");
    }

    private boolean ValidarNumeros() {
        double valor = 0;        
        boolean ValidacionCorrecta = true;
        txtEje1IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje1DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto1P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto2P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto3P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje1Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje1Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje2DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje3DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje4DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtEje5DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto2.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
        txtRepuesto3.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

        if (!txtEje1Izquierda.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje1Izquierda.getText().trim());                                
                txtEje1Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje1Izquierda.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("1");
            }

        }

        if (!txtEje1Derecha.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje1Derecha.getText());
                txtEje1Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje1Derecha.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("2");
            }

        }

        if (!txtEje2Izquierda.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje2Izquierda.getText());
                txtEje2Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2Izquierda.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("3");
            }

        }

        if (chkEje2Izquierda.isSelected()) {
            try {
                valor = Double.valueOf(txtEje2IzquierdaInt.getText());
                txtEje2IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("4");
            }

        } else {
            txtEje2IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }

        if (!txtEje2Derecha.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje2Derecha.getText());
                txtEje2Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2Derecha.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("5");
            }

        }
        if (chkEje2Derecha.isSelected()) {
            try {
                valor = Double.valueOf(txtEje2DerechaInt.getText());
                txtEje2DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2DerechaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("6");
            }

        } else {
            txtEje2DerechaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }           
        if (!txtEje3Izquierda.getText().equalsIgnoreCase("") ) {
            try {
                valor = Double.valueOf(txtEje3Izquierda.getText());
                txtEje3Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3Izquierda.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("valor del txtEje3Izquierda :" + txtEje3Izquierda.getText() );
                System.out.println("7");
            }

        }
        if (chkEje3Izquierda.isSelected()) {
            try {
                valor = Double.valueOf(txtEje3IzquierdaInt.getText());
                txtEje3IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("8");
            }

        } else {
            txtEje3IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje3Derecha.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje3Derecha.getText());
                txtEje3Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3Derecha.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("9");
            }

        }
        if (chkEje3Derecha.isSelected()) {
            try {
                valor = Double.valueOf(txtEje3DerechaInt.getText());
                txtEje3DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3DerechaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("10");
            }

        } else {
            txtEje3DerechaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }

        if (!txtEje4Izquierda.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje4Izquierda.getText());
                txtEje4Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4Izquierda.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("11");
            }

        }
        if (chkEje4Izquierda.isSelected()) {
            try {
                valor = Double.valueOf(txtEje4IzquierdaInt.getText());
                txtEje4IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("12");
            }

        } else {
            txtEje4IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje4Derecha.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje4Derecha.getText());
                txtEje4Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4Derecha.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("13");
            }

        }
        if (chkEje4Derecha.isSelected()) {
            try {
                valor = Double.valueOf(txtEje4DerechaInt.getText());
                txtEje4DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4DerechaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("14");
            }

        } else {
            txtEje4DerechaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje5Izquierda.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje5Izquierda.getText());
                txtEje5Izquierda.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5Izquierda.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("15");
            }

        }
        if (chkEje5Izquierda.isSelected()) {
            try {
                valor = Double.valueOf(txtEje5IzquierdaInt.getText());
                txtEje5IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("16");
            }

        } else {
            txtEje5IzquierdaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje5Derecha.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje5Derecha.getText());
                txtEje5Derecha.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5Derecha.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("17");
            }

        }
        if (chkEje5Derecha.isSelected()) {
            try {
                valor = Double.valueOf(txtEje5DerechaInt.getText());
                txtEje5DerechaInt.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5DerechaInt.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("18");
            }

        } else {
            txtEje5DerechaInt.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }

        if (chkRespuesto1.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto1.getText());
                txtRepuesto1.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto1.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("19");
            }

        }
        if (chkRespuesto2.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto2.getText());
                txtRepuesto2.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto2.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("20");
            }

        } else {
            txtRepuesto2.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (chkRespuesto3.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto3.getText());
                txtRepuesto3.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto3.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("21");
            }

        } else {
            txtRepuesto3.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje1IzquierdaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje1IzquierdaP.getText());
                txtEje1IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje1IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("22");
            }

        }
        if (!txtEje1DerechaP.getText().equalsIgnoreCase(regExp)) {
            try {
                valor = Double.valueOf(txtEje1DerechaP.getText());
                txtEje1DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje1DerechaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("23");
            }

        }
        if (!txtEje2IzquierdaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje2IzquierdaP.getText());
                txtEje2IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("24");
            }

        }

        if (chkEje3IzquierdaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje3IzquierdaIntP.getText());
                txtEje3IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("25");
            }

        } else {
            txtEje3IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (chkEje2IzquierdaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje2IzquierdaIntP.getText());
                txtEje2IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("26");
            }

        } else {
            txtEje2IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje2DerechaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje2DerechaP.getText());
                txtEje2DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2DerechaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("27");
            }

        }
        if (chkEje2DerechaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje2DerechaIntP.getText());
                txtEje2DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje2DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("28");
            }

        } else {
            txtEje2DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje3IzquierdaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje3IzquierdaP.getText());
                txtEje3IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("29");
            }

        }
        if (!txtEje3DerechaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje3DerechaP.getText());
                txtEje3DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3DerechaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("30");
            }

        }
        if (chkEje3DerechaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje3DerechaIntP.getText());
                txtEje3DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje3DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("31");
            }

        } else {
            txtEje3DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje4IzquierdaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje4IzquierdaP.getText());
                txtEje4IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("32");
            }

        }
        if (chkEje4IzquierdaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje4IzquierdaIntP.getText());
                txtEje4IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("33");
            }

        } else {
            txtEje4IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje4DerechaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje4DerechaP.getText());
                txtEje4DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4DerechaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("34");
            }

        }
        if (chkEje4DerechaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje4DerechaIntP.getText());
                txtEje4DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje4DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("35");
            }

        } else {
            txtEje4DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje5IzquierdaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje5IzquierdaP.getText());
                txtEje5IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5IzquierdaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("36");
            }

        }
        if (chkEje5IzquierdaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje5IzquierdaIntP.getText());
                txtEje5IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("37");
            }

        } else {
            txtEje5IzquierdaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (!txtEje5DerechaP.getText().equalsIgnoreCase("")) {
            try {
                valor = Double.valueOf(txtEje5DerechaP.getText());
                txtEje5DerechaP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5DerechaP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("38");
            }

        }
        if (chkEje5DerechaP.isSelected()) {
            try {
                valor = Double.valueOf(txtEje5DerechaIntP.getText());
                txtEje5DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtEje5DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("39");
            }

        } else {
            txtEje5DerechaIntP.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (chkRespuesto1P.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto1P.getText());
                txtRepuesto1P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto1P.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("40");
            }

        } else {
            txtRepuesto1P.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }
        if (chkRespuesto2P.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto2P.getText());
                txtRepuesto2P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto2P.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("41");
            }

        } else {
            txtRepuesto2P.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }

        if (chkRespuesto3P.isSelected()) {
            try {
                valor = Double.valueOf(txtRepuesto3P.getText());
                txtRepuesto3P.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));

            } catch (NumberFormatException et) {
                txtRepuesto3P.setBorder(BorderFactory.createLineBorder(Color.RED, 1));
                ValidacionCorrecta = false;
                System.out.println("42");
            }

        } else {
            txtRepuesto3P.setBorder(BorderFactory.createLineBorder(Color.gray, 1));
        }

        return ValidacionCorrecta;

    }

}
