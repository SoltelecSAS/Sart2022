/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.igrafica;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import com.soltelec.dao.ControladorVerificar;
import com.soltelec.dao.HojaPruebasJpaController;
import com.soltelec.dao.PruebasJpaController;
import com.soltelec.dao.exceptions.IllegalOrphanException;
import com.soltelec.dao.exceptions.NonexistentEntityException;
import com.soltelec.model.HojaPruebas;
import com.soltelec.model.Pruebas;
import com.soltelec.modulopuc.configuracion.modelo.Conexion;
import com.soltelec.modulopuc.utilidades.Mensajes;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import javax.persistence.EntityManager;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Gerencia Desarrollo de Soluciones Tecnologicas
 */
public class Frm_moca_IVisualv2 extends javax.swing.JDialog {
    /**
     * Creates new form Frm_moca_IVisualv2
     */
    private boolean oprimido = false;
    private boolean bloquearAExterior = false;
    private boolean bloquearRInterior = false;
    private boolean bloquearSFrenos = false;
    private Frm_moca_AExteriorv2 dlg;
    private Frm_moca_RInteriorv2 dlg1;
    private Frm_moca_SFrenosv2 dlg2;
    private int idVehiculo;
    private int hojaPruebasActual;
    private int idPrueba;
    private int idUsuario;
    private String usuario;
    private String password;
    private String direccionIP;
    private Connection conexion1;
    private HojaPruebasJpaController hojaPruebasController;
    private HojaPruebas hojaPruebas;
    private String txtProfLabrado;
    NoReiniciable nrei = new NoReiniciable();
    EntityManager em;

    public Frm_moca_IVisualv2(java.awt.Frame parent, boolean modal, int idVehiculo,
            int hojaPruebasActual, int idPrueba, int idUsuario, EntityManager em) {
        super(parent, modal);
        this.idVehiculo = idVehiculo;
        this.hojaPruebasActual = hojaPruebasActual;
        this.idPrueba = idPrueba;
        this.idUsuario = idUsuario;
        this.em=em;
        //jButton1.setVisible(false);        
        initComponents();
        setTitle("INSPECCIÓN SENSORIAL PARA MOTO-CARROS");
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);
    }

    private Frm_moca_IVisualv2(JFrame jFrame, boolean b) {
        super(jFrame, b);
        initComponents();
        setTitle("INSPECCIÓN SENSORIAL PARA MOTO-CARROS");
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgComentario = new JDialog(this);
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        btnSaveComment = new javax.swing.JButton();
        btnCancelComment = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lab_revicion = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        labl_descripcion = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lab_revicionInterior = new javax.swing.JLabel();
        lab_sistemaFrenos = new javax.swing.JLabel();
        lab_finalizar = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnComentario = new javax.swing.JButton();

        dlgComentario.setMinimumSize(new java.awt.Dimension(400, 300));

        txtComentario.setColumns(20);
        txtComentario.setRows(5);
        jScrollPane1.setViewportView(txtComentario);

        btnSaveComment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/save_24.png"))); // NOI18N
        btnSaveComment.setText("Guardar");
        btnSaveComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCommentActionPerformed(evt);
            }
        });

        btnCancelComment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/salir24.png"))); // NOI18N
        btnCancelComment.setText("Cancelar");
        btnCancelComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelCommentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgComentarioLayout = new javax.swing.GroupLayout(dlgComentario.getContentPane());
        dlgComentario.getContentPane().setLayout(dlgComentarioLayout);
        dlgComentarioLayout.setHorizontalGroup(
            dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgComentarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgComentarioLayout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(btnSaveComment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelComment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dlgComentarioLayout.setVerticalGroup(
            dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgComentarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addGap(7, 7, 7)
                .addGroup(dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveComment)
                    .addComponent(btnCancelComment))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lab_revicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/revicionInterior.png"))); // NOI18N
        lab_revicion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_revicionMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_revicionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_revicionMouseExited(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        labl_descripcion.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labl_descripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labl_descripcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labl_descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("<html><ul><li>Al pasar el mouse sobre las imagenes se activara la opción y se mostrara la descipción en la parte inferior.</li><li>Puede hacer clic sobre la imagen para acceder a la opción</li><li>Tambien puede salir haciendo clic en la imagen de bandera</li></ul></html>");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        lab_revicionInterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/configuracionCambio.png"))); // NOI18N
        lab_revicionInterior.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_revicionInteriorMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_revicionInteriorMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_revicionInteriorMouseExited(evt);
            }
        });

        lab_sistemaFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png"))); // NOI18N
        lab_sistemaFrenos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_sistemaFrenosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_sistemaFrenosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_sistemaFrenosMouseExited(evt);
            }
        });

        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/fin.png"))); // NOI18N
        lab_finalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseExited(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/solt.png"))); // NOI18N

        btnComentario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/book_24.png"))); // NOI18N
        btnComentario.setText("Comentario");
        btnComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComentarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(137, 137, 137))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lab_revicion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_revicionInterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_sistemaFrenos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lab_finalizar))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab_revicion)
                    .addComponent(lab_revicionInterior)
                    .addComponent(lab_sistemaFrenos)
                    .addComponent(lab_finalizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnComentario)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void doClose() {
        setVisible(false);
        dispose();
    }
    
    private void lab_revicionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionMouseClicked
        oprimido = nrei.obtener_oprimido();
        //JOptionPane.showMessageDialog(null, "La variable oprimido es igual a: " +oprimido);

        if (oprimido == false && bloquearAExterior == true) {
            JOptionPane.showMessageDialog(null, "Esta prueba ya se ha realizado..", "ERROR", JOptionPane.ERROR_MESSAGE);
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }

        if (oprimido == false && bloquearAExterior == false) {

            FrmLogin obj = new FrmLogin();
            dlg = new Frm_moca_AExteriorv2(obj, true, idVehiculo, hojaPruebasActual, idPrueba);
            dlg.setNrei(nrei);//Guardar la referencia del objeto.
            dlg.setTitle("ACONDICIONAMIENTO EXTERIOR");
            dlg.setVisible(true);
        }
        if (nrei.obtener_oprimido() == true) {
            //JOptionPane.showMessageDialog(null, "OBtener oprimido = " +nrei.obtener_oprimido());
            bloquearAExterior = true;
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }
    }//GEN-LAST:event_lab_revicionMouseClicked

    private void lab_revicionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionMouseEntered
        lab_revicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/revicionInteriorCambio.png")));
        labl_descripcion.setText("<html><font size=5 >ACONDICIONAMIENTO EXTERIOR <br/> VIDRIOS - RETROVISORES <br/> SOPORTE EXTERIOR DE RUEDA <br/> BOCINA/PITO</font></html>");
    }//GEN-LAST:event_lab_revicionMouseEntered

    private void lab_revicionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionMouseExited
        lab_revicion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/revicionInterior.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_revicionMouseExited

    private void lab_revicionInteriorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionInteriorMouseClicked
        oprimido = nrei.obtener_oprimido();
        //JOptionPane.showMessageDialog(null, "La variable oprimido es igual a: " +oprimido);

        if (oprimido == false && bloquearRInterior == true) {
            JOptionPane.showMessageDialog(null, "Esta prueba ya se ha realizado..", "ERROR", JOptionPane.ERROR_MESSAGE);
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }

        if (oprimido == false && bloquearRInterior == false) {

            FrmLogin obj = new FrmLogin();
            dlg1 = new Frm_moca_RInteriorv2(obj, true, idVehiculo, hojaPruebasActual, idPrueba);
            dlg1.setNrei(nrei);//Guardar la referencia del objeto.
            dlg1.setTitle("Frm_IGCentral");
            dlg1.setVisible(true);
        }
        if (nrei.obtener_oprimido() == true) {
            //JOptionPane.showMessageDialog(null, "OBtener oprimido = " +nrei.obtener_oprimido());
            bloquearRInterior = true;
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }
    }//GEN-LAST:event_lab_revicionInteriorMouseClicked

    private void lab_revicionInteriorMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionInteriorMouseEntered
        lab_revicionInterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/configuracion.png")));
        labl_descripcion.setText("<html><font size=5 >REVISIÓN INTERIOR<br/> ALUMBRADO/SEÑALIZACIÓN <br/> MECANISMOS DE <br/>ACCIONAMIENTO DE FRENOS</font></html>");
    }//GEN-LAST:event_lab_revicionInteriorMouseEntered

    private void lab_revicionInteriorMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_revicionInteriorMouseExited
        lab_revicionInterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/configuracionCambio.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_revicionInteriorMouseExited

    private void lab_sistemaFrenosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemaFrenosMouseClicked
        oprimido = nrei.obtener_oprimido();
        //JOptionPane.showMessageDialog(null, "La variable oprimido es igual a: " +oprimido);

        if (oprimido == false && bloquearSFrenos == true) {
            JOptionPane.showMessageDialog(null, "Esta prueba ya se ha realizado..", "ERROR", JOptionPane.ERROR_MESSAGE);
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }

        if (oprimido == false && bloquearSFrenos == false) {

            FrmLogin obj = new FrmLogin();
            dlg2 = new Frm_moca_SFrenosv2(obj, true, idVehiculo, hojaPruebasActual, idPrueba);
            dlg2.setNrei(nrei);//Guardar la referencia del objeto.
            dlg2.setTitle("Frm_IGCentral");
            dlg2.setVisible(true);
        }
        if (nrei.obtener_oprimido() == true) {
            //JOptionPane.showMessageDialog(null, "OBtener oprimido = " +nrei.obtener_oprimido());
            bloquearSFrenos = true;
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }
    }//GEN-LAST:event_lab_sistemaFrenosMouseClicked

    private void lab_sistemaFrenosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemaFrenosMouseEntered
        lab_sistemaFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/ruedaCambia.png")));
        labl_descripcion.setText("<html><font size=5 >SISTEMA DE FRENOS - SUSPENSIÓN <br/> DIRECCIÓN - MOTOR / CAJA</font></html>");
    }//GEN-LAST:event_lab_sistemaFrenosMouseEntered

    private void lab_sistemaFrenosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemaFrenosMouseExited
        lab_sistemaFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_sistemaFrenosMouseExited

    private void lab_finalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseClicked
        if (bloquearAExterior == false) {
            dlg = new Frm_moca_AExteriorv2();
        }
        if (bloquearRInterior == false) {
            dlg1 = new Frm_moca_RInteriorv2();
        }
        if (bloquearSFrenos == false) {
            dlg2 = new Frm_moca_SFrenosv2();
        }
//         ControladorVerificar controladorVerificar = new ControladorVerificar();
//        String txtLabrado = controladorVerificar.exisTestLab(this.idPrueba, em);
//        if (txtLabrado.equalsIgnoreCase("0")) {
//            JOptionPane.showMessageDialog(this, "Disculpe, La prueba de Inspeccion Sensorial no se Puede Finalizar hasta tanto usted no registre Profundidad de Labrado de las Llantas ");
//            return;
//        }
        //No mira si pasa o no, pero escribe datos en la BD! (------ CÓDIGO FUNCIONAL -------)
        try {
            Class.forName("com.mysql.jdbc.Driver");
            conexion1 = (Connection) DriverManager.getConnection("jdbc:mysql://" + Conexion.getIpServidor() + ":"+Conexion.getPuerto() +  "/"+ Conexion.getBaseDatos() , Conexion.getUsuario(),Conexion.getContraseña());
        } catch (ClassNotFoundException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Class not found exception", "ERROR", JOptionPane.ERROR_MESSAGE);
            //CMensajes.mostrarExcepcion(ex);
        } catch (SQLException ex) {
            //CMensajes.mostrarExcepcion(ex);
            JOptionPane.showMessageDialog(null, "SQL Exception", "ERROR", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        }

        try {
            ResultSet rs = null;
            conexion1.setAutoCommit(false);
            String statement = "UPDATE pruebas SET usuario_for = ?, autorizada = 'N', finalizada = 'Y' WHERE id_pruebas = ?;";
            PreparedStatement instruccion = (PreparedStatement) conexion1.prepareStatement(statement);//

            //JOptionPane.showMessageDialog(null, "Marcador1");
            instruccion.setInt(1, idUsuario);
            instruccion.setInt(2, idPrueba);
            //JOptionPane.showMessageDialog(null, "Id de la prueba " +idPrueba);

            //instruccion.executeUpdate("UPDATE pruebas SET autorizada = 'Y' WHERE id_pruebas = ?;");
            int executeQuery = instruccion.executeUpdate();
//                    executeQuery.first();
//                    cantidadB = executeQuery.getInt(1);
            instruccion.clearParameters();
            //JOptionPane.showMessageDialog(null, "bandera finalizado en 'Y'");
           String strTotal = "select count(d.Tipo_defecto) from pruebas as pr "
                        + "inner join defxprueba as dp on pr.id_pruebas=dp.id_prueba "
                        + "inner join defectos as d on dp.id_defecto = d.CARDEFAULT "
                        + "INNER JOIN grupos_sub_grupos gsg on gsg.SCDEFGROUPSUB = d.DEFGROUPSSUB\n"
                        + "inner join grupos as g on gsg.DEFGROUP = g.DEFGROUP "
                        + "where pr.id_pruebas in "
                        + "(select max(id_pruebas) from pruebas as p where p.hoja_pruebas_for = ?  AND p.Finalizada = 'Y' group by  p.Tipo_prueba_for ) "
                        + "and  d.Tipo_defecto=? and pr.hoja_pruebas_for = ? and pr.Finalizada = 'Y'";
                java.sql.PreparedStatement consultaTotal = conexion1.prepareStatement(strTotal);
                consultaTotal.setLong(1,hojaPruebasActual);
                consultaTotal.setString(2, "A");
                consultaTotal.setLong(3, hojaPruebasActual);
                rs = null;
                rs = consultaTotal.executeQuery();
                rs.first();
                int totalDefA = rs.getInt(1);
                consultaTotal.clearParameters();              
            //System.out.println("Datos enviados");
                //JOptionPane.showMessageDialog(null, "slkd" +idprueba);
                String strIVEval = "UPDATE pruebas SET Aprobada = ? where Id_Pruebas = ?";
                java.sql.PreparedStatement psEvalIV = conexion1.prepareStatement(strIVEval);
                if (totalDefA > 0 ) {//solo desaprueba la Inspeccion Sensorial si encuentra defectos tipo A o en el peor caso de defectos tipo B
                    psEvalIV.setString(1, "N");
                } else {
                    psEvalIV.setString(1, "Y");
                }
                psEvalIV.setLong(2, idPrueba);
                int pruebasEjecutadas = psEvalIV.executeUpdate();
                System.out.println("Pruebas de IV Actualizadas: " + pruebasEjecutadas);
             
            conexion1.commit();
            conexion1.setAutoCommit(true);
            conexion1.close();
            //System.out.println("Datos enviados");
            //JOptionPane.showMessageDialog(null, "slkd" +idprueba);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error en la escritura de datos", "ERROR", JOptionPane.ERROR_MESSAGE);
            //CMensajes.mostrarExcepcion(ex);
        }        
        doClose();
        //System.exit(0);
    }//GEN-LAST:event_lab_finalizarMouseClicked

    private void lab_finalizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseEntered
        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/finCambia.png")));
        labl_descripcion.setText("FINALIZAR PRUEBA");
    }//GEN-LAST:event_lab_finalizarMouseEntered

    private void lab_finalizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseExited
        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/fin.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_finalizarMouseExited

    private void btnSaveCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCommentActionPerformed
        PruebasJpaController controller = new PruebasJpaController();      
        Pruebas pruebaedit = null;
        for (Pruebas prueba : hojaPruebas.getPruebasCollection()) {
            if (prueba.getTipoPrueba().getTesttype() == 1) {
                prueba.setObservaciones(txtProfLabrado);
                if (prueba.getObservaciones() != null) {
                    prueba.setObservaciones(prueba.getObservaciones().concat("obs").concat(txtComentario.getText()));
                } else {
                    prueba.setObservaciones("obs".concat(txtComentario.getText()));
                }
                pruebaedit = prueba;
            }
        }
        try {
            controller.edit(pruebaedit);
            Mensajes.mensajeCorrecto("Se Almaceno  el comentario con Exito ..¡");
        } catch (IllegalOrphanException ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        } catch (NonexistentEntityException ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        } catch (Exception ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        }
        dlgComentario.dispose();
    }//GEN-LAST:event_btnSaveCommentActionPerformed

    private void btnCancelCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelCommentActionPerformed
        dlgComentario.dispose();
    }//GEN-LAST:event_btnCancelCommentActionPerformed

    private void btnComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComentarioActionPerformed
        hojaPruebasController = new HojaPruebasJpaController();
        hojaPruebas = hojaPruebasController.findHojaPruebas(hojaPruebasActual);
        ControladorVerificar controladorVerificar = new ControladorVerificar();
        String txtObs = controladorVerificar.exisObs(this.idPrueba, em);
        String[] lstObs = txtObs.split("obs");
        if(lstObs.length>1){ 
            txtComentario.setText(lstObs[1]); 
        }
        txtProfLabrado=lstObs[0];       
        dlgComentario.setVisible(true);
        dlgComentario.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnComentarioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_moca_IVisualv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Frm_moca_IVisualv2 dialog = new Frm_moca_IVisualv2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelComment;
    private javax.swing.JButton btnComentario;
    private javax.swing.JButton btnSaveComment;
    private javax.swing.JDialog dlgComentario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lab_finalizar;
    private javax.swing.JLabel lab_revicion;
    private javax.swing.JLabel lab_revicionInterior;
    private javax.swing.JLabel lab_sistemaFrenos;
    private javax.swing.JLabel labl_descripcion;
    private javax.swing.JTextArea txtComentario;
    // End of variables declaration//GEN-END:variables
}
