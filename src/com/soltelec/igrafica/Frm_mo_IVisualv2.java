/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.igrafica;

import com.soltelec.dao.ControladorVerificar;
import com.soltelec.dao.HojaPruebasJpaController;
import com.soltelec.dao.PruebasJpaController;
import com.soltelec.dao.exceptions.IllegalOrphanException;
import com.soltelec.dao.exceptions.NonexistentEntityException;
import com.soltelec.model.HojaPruebas;
import com.soltelec.model.Pruebas;
import com.soltelec.modulopuc.configuracion.modelo.Conexion;
import com.soltelec.modulopuc.utilidades.Mensajes;
import java.awt.Dimension;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.Window;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.persistence.EntityManager;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import org.soltelec.util.ConsultarDatosVehiculo;

/**
 *
 * @author Gerencia Desarrollo de Soluciones Tecnologicas
 */
public class Frm_mo_IVisualv2 extends javax.swing.JDialog 
{
    
    int cantidadA = 0;
    int cantidadB = 0;
    EntityManager em;
    private int idVehiculo;
    private int idPrueba;
    private int idUsuario;
    Frm_mo_SFrenosv2 dlg12;
    boolean oprimido = false;
    Frm_mo_AExteriorv2 dlg11;
    private Connection conexion;
    boolean isEnsenianza = false;
    private int hojaPruebaActual;
    private String txtProfLabrado;
    boolean aplicTaximetro = false;
    private HojaPruebas hojaPruebas;
    boolean bloquearSFrenos = false;
    boolean bloquearAExterior = false;
    NoReiniciable nrei = new NoReiniciable();
    private HojaPruebasJpaController hojaPruebasController;

    public Frm_mo_IVisualv2(java.awt.Frame parent, boolean modal, int idVehiculo, int hojaPruebaActual,int idPrueba, int idUsuario, boolean isEnsenianza, boolean aplicTaximetro, EntityManager em) 
    {
        super(parent, modal); 
        this.idVehiculo = idVehiculo;
        this.hojaPruebaActual = hojaPruebaActual;
        this.idPrueba = idPrueba;
        this.idUsuario = idUsuario;
        this.isEnsenianza = isEnsenianza;
        this.aplicTaximetro = aplicTaximetro;
        this.em = em;
        initComponents();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);
        if (this.isEnsenianza == true) 
        {
            lab_enesenanza.setEnabled(true);
        } else 
        {
            lab_enesenanza.setEnabled(false);
        }
    }


    private Frm_mo_IVisualv2(JFrame jFrame, boolean b) {
        super(jFrame, b);
        initComponents();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);
    }

    public NoReiniciable getNrei() 
    {
        return nrei;
    }

    public void setNrei(NoReiniciable nrei) {
        this.nrei = nrei;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgComentario = new JDialog(this);
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComentario = new javax.swing.JTextArea();
        btnSaveComment = new javax.swing.JButton();
        btnCancelComment = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lab_acondicionamiento = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        labl_descripcion = new javax.swing.JLabel();
        lab_sistemasDeFrenos = new javax.swing.JLabel();
        lab_enesenanza = new javax.swing.JLabel();
        lab_finalizar = new javax.swing.JLabel();
        btn_finalizar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnComentario = new javax.swing.JButton();

        dlgComentario.setMinimumSize(new java.awt.Dimension(400, 300));

        txtComentario.setColumns(20);
        txtComentario.setRows(5);
        jScrollPane1.setViewportView(txtComentario);

        btnSaveComment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/save_24.png"))); // NOI18N
        btnSaveComment.setText("Guardar");
        btnSaveComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveCommentActionPerformed(evt);
            }
        });

        btnCancelComment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/salir24.png"))); // NOI18N
        btnCancelComment.setText("Cancelar");
        btnCancelComment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelCommentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dlgComentarioLayout = new javax.swing.GroupLayout(dlgComentario.getContentPane());
        dlgComentario.getContentPane().setLayout(dlgComentarioLayout);
        dlgComentarioLayout.setHorizontalGroup(
            dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgComentarioLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dlgComentarioLayout.createSequentialGroup()
                        .addGap(0, 134, Short.MAX_VALUE)
                        .addComponent(btnSaveComment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelComment, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        dlgComentarioLayout.setVerticalGroup(
            dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgComentarioLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dlgComentarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveComment)
                    .addComponent(btnCancelComment))
                .addGap(7, 7, 7))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lab_acondicionamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/moto.png"))); // NOI18N
        lab_acondicionamiento.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_acondicionamientoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_acondicionamientoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_acondicionamientoMouseExited(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("<html><ul><li>Al pasar el mouse sobre las imagenes se activara la opción y se mostrara la descipción en la parte inferior.</li><li>Puede hacer clic sobre la imagen para acceder a la opción</li><li>Tambien puede salir haciendo clic en la imagen de bandera</li></ul></html>");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        labl_descripcion.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labl_descripcion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labl_descripcion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labl_descripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
        );

        lab_sistemasDeFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png"))); // NOI18N
        lab_sistemasDeFrenos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_sistemasDeFrenosMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_sistemasDeFrenosMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_sistemasDeFrenosMouseExited(evt);
            }
        });

        lab_enesenanza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/ensenanza.png"))); // NOI18N
        lab_enesenanza.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_enesenanzaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_enesenanzaMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_enesenanzaMouseExited(evt);
            }
        });

        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/fin.png"))); // NOI18N
        lab_finalizar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lab_finalizarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                lab_finalizarMouseReleased(evt);
            }
        });

        btn_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/salir24.png"))); // NOI18N
        btn_finalizar.setText("Cancelar");
        btn_finalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_finalizarActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/solt.png"))); // NOI18N

        btnComentario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/book_24.png"))); // NOI18N
        btnComentario.setText("Comentario");
        btnComentario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnComentarioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(btnComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btn_finalizar))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lab_acondicionamiento)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lab_sistemasDeFrenos)
                                .addGap(18, 18, 18)
                                .addComponent(lab_enesenanza))
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lab_finalizar)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lab_acondicionamiento)
                    .addComponent(lab_sistemasDeFrenos)
                    .addComponent(lab_enesenanza)
                    .addComponent(lab_finalizar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_finalizar)
                            .addComponent(btnComentario))
                        .addGap(22, 22, 22)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(18, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void doClose(int retStatus) 
    {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    private void lab_acondicionamientoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_acondicionamientoMouseClicked
        
        oprimido = nrei.obtener_oprimido(); //variable para obtener el bool pero no sirve....  
        if (oprimido == false && bloquearAExterior == true) 
        {
            JOptionPane.showMessageDialog(null, "Esta prueba ya se ha realizado..", "ERROR", JOptionPane.ERROR_MESSAGE);
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }

        if (oprimido == false && bloquearAExterior == false) 
        {
            FrmLogin obj = new FrmLogin();
            dlg11 = new Frm_mo_AExteriorv2(obj, true, idVehiculo, hojaPruebaActual, idPrueba);
            dlg11.setNrei(getNrei());//Guardar la referencia del objeto.
            dlg11.setTitle("Frm_IGCentral");
            dlg11.setVisible(true);
        }
        if (nrei.obtener_oprimido() == true) 
        {
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }
    }//GEN-LAST:event_lab_acondicionamientoMouseClicked

    private void lab_acondicionamientoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_acondicionamientoMouseEntered
        lab_acondicionamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/motoCambio.png")));
        labl_descripcion.setText("<html><p><font size=4>ACONDICIONAMIENTO EXTERIOR /<br/> SILLIN - REPOSICIÓN /<br/> ELEMENTOS DE RUIDO /<br/> ALUMBRADO - SEÑALIZACIÓN</font></html>");
    }//GEN-LAST:event_lab_acondicionamientoMouseEntered

    private void lab_acondicionamientoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_acondicionamientoMouseExited
        lab_acondicionamiento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/moto.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_acondicionamientoMouseExited

    private void lab_sistemasDeFrenosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemasDeFrenosMouseClicked
        oprimido = nrei.obtener_oprimido(); //variable para obtener el bool pero no sirve....
        if (oprimido == false && bloquearSFrenos == true) 
        {
            JOptionPane.showMessageDialog(null, "Esta prueba ya se ha realizado..", "ERROR", JOptionPane.ERROR_MESSAGE);
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }

        if (oprimido == false && bloquearSFrenos == false) 
        {
            FrmLogin obj = new FrmLogin();
            dlg12 = new Frm_mo_SFrenosv2(obj, true, idVehiculo, hojaPruebaActual, idPrueba);
            dlg12.setNrei(nrei);//Guardar la referencia del objeto.
            dlg12.setTitle("Frm_IGCentral");
            dlg12.setVisible(true);
        }
        if (nrei.obtener_oprimido() == true) {
            bloquearSFrenos = true;
            nrei.reiniciarVariable();//Reiniciar variable de clase para que quede preparada para comprobar otro boton
        }
    }//GEN-LAST:event_lab_sistemasDeFrenosMouseClicked

    private void lab_sistemasDeFrenosMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemasDeFrenosMouseEntered
        lab_sistemasDeFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/ruedaCambia.png")));
        labl_descripcion.setText("<html><p><font size=6>SISTEMA DE FRENOS /<br/> SUSPENSIÓN /<br/> RINES - LLANTAS</font></p></html>");
    }//GEN-LAST:event_lab_sistemasDeFrenosMouseEntered

    private void lab_sistemasDeFrenosMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_sistemasDeFrenosMouseExited
        lab_sistemasDeFrenos.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/rueda.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_sistemasDeFrenosMouseExited

    private void lab_enesenanzaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_enesenanzaMouseClicked
        
        if (this.isEnsenianza == false) 
        {
            JOptionPane.showMessageDialog(null, "Disculpe, esta Moto No esta habilitada para Enseñanza", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);
        } else {
            Window window = (SwingUtilities.getWindowAncestor(this));
            Frm_mo_Ensev2 frm_ensenianza = new Frm_mo_Ensev2((Frame) window, true, idPrueba);
            frm_ensenianza.setVisible(true);
            frm_ensenianza.setLocationRelativeTo(window);
            lab_enesenanza.setEnabled(false);
        }

    }//GEN-LAST:event_lab_enesenanzaMouseClicked

    private void lab_enesenanzaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_enesenanzaMouseEntered
        lab_enesenanza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/ensenanzaCambio.png")));
        labl_descripcion.setText("<html>ENSEÑANZA<br/> AUTOMOVILISTICA</html>");
    }//GEN-LAST:event_lab_enesenanzaMouseEntered

    private void lab_enesenanzaMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_enesenanzaMouseExited
        lab_enesenanza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/ensenanza.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_enesenanzaMouseExited

    private void lab_finalizarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseClicked

        try 
        {
            if (bloquearAExterior == false) 
            {
                dlg11 = new Frm_mo_AExteriorv2();
            }
            if (bloquearSFrenos == false) {
                dlg12 = new Frm_mo_SFrenosv2();
            }
            conexion = llamarConexion();
            insertarSerialEquipo();
            validarPruebaEstadoFinal();
        } catch (Exception e)
        {
        } finally 
        {
            if (conexion != null) 
            {
                try 
                {
                    conexion.close();
                } catch (Exception e) {
                    
                }
            }
        }
        doClose(0);
    }//GEN-LAST:event_lab_finalizarMouseClicked

    private void validarPruebaEstadoFinal() 
    {
        ResultSet rs = null;
        try 
        {
            conexion.setAutoCommit(false);
            String strTotal = "select count(d.Tipo_defecto) from pruebas as pr "
                    + "inner join defxprueba as dp on pr.id_pruebas=dp.id_prueba "
                    + "inner join defectos as d on dp.id_defecto = d.CARDEFAULT "
                    + "INNER JOIN grupos_sub_grupos gsg on gsg.SCDEFGROUPSUB = d.DEFGROUPSSUB\n"
                    + "inner join grupos as g on gsg.DEFGROUP = g.DEFGROUP "
                    + "where pr.id_pruebas in "
                    + "(select max(id_pruebas) from pruebas as p where p.hoja_pruebas_for = ?  AND p.Finalizada = 'Y' group by  p.Tipo_prueba_for ) "
                    + "and  d.Tipo_defecto=? and pr.hoja_pruebas_for = ? and pr.Finalizada = 'Y'";
            PreparedStatement consultaTotal = conexion.prepareStatement(strTotal);
            consultaTotal.setLong(1, hojaPruebaActual);
            consultaTotal.setString(2, "A");
            consultaTotal.setLong(3, hojaPruebaActual);
            rs = null;
            rs = consultaTotal.executeQuery();
            rs.first();
            int totalDefA = rs.getInt(1);
            consultaTotal.clearParameters();
            String strIVEval = "UPDATE pruebas SET Aprobada = ? where Id_Pruebas = ?";
            java.sql.PreparedStatement psEvalIV = conexion.prepareStatement(strIVEval);
            if (totalDefA > 0) {//solo desaprueba la Inspeccion Sensorial si encuentra defectos tipo A o en el peor caso de defectos tipo B
                psEvalIV.setString(1, "N");
            } else {
                psEvalIV.setString(1, "Y");
            }
            psEvalIV.setLong(2, idPrueba);
            int pruebasEjecutadas = psEvalIV.executeUpdate();
            System.out.println("Pruebas de IV Actualizadas: " + pruebasEjecutadas);
            conexion.commit();

        } catch (SQLException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error en la escritura de datos", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * 
     */
    private void insertarSerialEquipo()
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("--------- Insertar Serial Equipo          -----------");
        System.out.println("---------                                 -----------");
        try
        {
            conexion.setAutoCommit(false);
            String statement = "UPDATE pruebas SET usuario_for = ?, autorizada = 'N', finalizada = 'Y',serialEquipo=? WHERE id_pruebas = ?;";
            PreparedStatement instruccion = conexion.prepareStatement(statement);//
            instruccion.setInt(1, idUsuario);
            instruccion.setString(2, cargarSerialEquipo(idPrueba));
            instruccion.setInt(3, idPrueba);
            instruccion.executeUpdate();
            instruccion.clearParameters();
            conexion.commit();
            conexion.setAutoCommit(true);
        } catch (SQLException ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error en la escritura de datos", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);
            Mensajes.mostrarExcepcion(ex);
        }

    }
    
    /*
     * 
     * @return 
     */
    private String cargarSerialEquipo(int idPrueba)
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("---------    Cargar Serial Equipo         -----------");
        System.out.println("---------                             ---------------");
        
        String serialEquipo = "";
        try 
        {
            serialEquipo = ConsultarDatosVehiculo.buscarSerialEquipo(idPrueba);
            System.out.println("--------- Serial cargado : "  + serialEquipo);
            System.out.println("-----------------------------------------------------");
        } catch (Exception e) {
            System.out.println(" ME CAI CON " + e.getMessage());
            System.out.println(" CAUSA " + e.getCause());
            serialEquipo = "Serial no encontrado";
        }
        return serialEquipo;
    }


    /**
     * 
     * Metodo que permite capturar la conexion a la db
     * @AUTOR ELKIN B
     * @return 
     */
    public Connection llamarConexion()
    {
        try {
            Class.forName("com.mysql.jdbc.Driver");
            System.out.println(" IpServidor :  " + Conexion.getIpServidor() + " Puerto " + Conexion.getPuerto() + " BaseDatos : " +  Conexion.getBaseDatos() + " Contraseña :  " + Conexion.getContraseña());
            Connection cn = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://" + Conexion.getIpServidor() + ":" + Conexion.getPuerto() + "/" + Conexion.getBaseDatos(), Conexion.getUsuario(), Conexion.getContraseña());
//            Connection cn = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3306/db_cda", "root", "50lt3l3c545");
            return cn;
        } catch (ClassNotFoundException | SQLException ex) {

            System.out.println("Error en el metodo: llamarConexion() " + ex.getMessage());
            Mensajes.mostrarExcepcion(ex);
            JOptionPane.showMessageDialog(null, "Error al conectar con la db");
            System.exit(0);
        }
        return null;
    }

    
    private void lab_finalizarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseEntered
        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/finCambia.png")));
        labl_descripcion.setText("<html>FINALIZAR PRUEBA</html>");
    }//GEN-LAST:event_lab_finalizarMouseEntered

    private void lab_finalizarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseExited
        lab_finalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/fin.png")));
        labl_descripcion.setText(null);
    }//GEN-LAST:event_lab_finalizarMouseExited

    private void btn_finalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_finalizarActionPerformed
        String comentario;
        comentario = JOptionPane.showInputDialog(null, "Cual es el motivo de aborto");

        try {
            Class.forName("com.mysql.jdbc.Driver");
            conexion = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://" + Conexion.getIpServidor() + ":" + Conexion.getPuerto() + "/" + Conexion.getBaseDatos(), Conexion.getUsuario(), Conexion.getContraseña());
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "Class not found exception", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);
            //CMensajes.mostrarExcepcion(ex);
        } catch (SQLException ex) {
            //CMensajes.mostrarExcepcion(ex);
            JOptionPane.showMessageDialog(null, "SQL Exception", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);
        }

        try {
            String serialEquipo = "";
            try {
                serialEquipo = ConsultarDatosVehiculo.buscarSerialEquipo(idPrueba);
                System.out.println(" LECTURA SERIAL");
            } catch (Exception e) {
                System.out.println(" ME CAI CON " + e.getMessage());
                System.out.println(" CAUSA " + e.getCause());
                serialEquipo = "Serial no encontrado";
            }
            conexion.setAutoCommit(false);
            String statement = "UPDATE pruebas SET usuario_for = ?, finalizada = 'Y', abortada = 'Y', comentario_aborto = ?,serialEquipo=? WHERE id_pruebas = ?;";
            PreparedStatement instruccion = conexion.prepareStatement(statement);//
            //JOptionPane.showMessageDialog(null, "Marcador1");
            instruccion.setInt(1, idUsuario);
            instruccion.setString(2, comentario);
            instruccion.setString(3, serialEquipo);
            instruccion.setInt(4, idPrueba);
            //JOptionPane.showMessageDialog(null, "Id de la prueba " +idPrueba);

            //instruccion.executeUpdate("UPDATE pruebas SET autorizada = 'Y' WHERE id_pruebas = ?;");
            int executeQuery = instruccion.executeUpdate();
//                    executeQuery.first();
//                    cantidadB = executeQuery.getInt(1);
            instruccion.clearParameters();

            conexion.commit();
            conexion.setAutoCommit(true);
            conexion.close();
            //System.out.println("Datos enviados");
            //JOptionPane.showMessageDialog(null, "slkd" +idprueba);

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error en la escritura de datos", "SART 1.7.3", JOptionPane.ERROR_MESSAGE);
            //CMensajes.mostrarExcepcion(ex);
        }

        doClose(0);
    }//GEN-LAST:event_btn_finalizarActionPerformed

    private void btnComentarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnComentarioActionPerformed
        hojaPruebasController = new HojaPruebasJpaController();
        hojaPruebas = hojaPruebasController.findHojaPruebas(hojaPruebaActual);
        ControladorVerificar controladorVerificar = new ControladorVerificar();
         String txtObs = controladorVerificar.exisObsCrud(this.idPrueba, em);
        String[] lstObs = txtObs.split("obs");
        if(lstObs.length>1){ 
            txtComentario.setText(lstObs[1]); 
        }
        txtProfLabrado=lstObs[0];
        dlgComentario.setVisible(true);
        dlgComentario.setLocationRelativeTo(null);
    }//GEN-LAST:event_btnComentarioActionPerformed

    private void btnSaveCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveCommentActionPerformed
        PruebasJpaController controller = new PruebasJpaController();      
        Pruebas pruebaedit = null;
        for (Pruebas prueba : hojaPruebas.getPruebasCollection()) {
            if (prueba.getTipoPrueba().getTesttype() == 1) {
                prueba.setObservaciones(txtProfLabrado);
                if (prueba.getObservaciones() != null) {
                    prueba.setObservaciones(prueba.getObservaciones().concat("obs").concat(txtComentario.getText()));
                } else {
                    prueba.setObservaciones("obs".concat(txtComentario.getText()));
                }
                pruebaedit = prueba;
            }
        }
        try {
            controller.edit(pruebaedit);
            Mensajes.mensajeCorrecto("Se ha Almacenado el comentario Exitosamente ..¡");
        } catch (IllegalOrphanException ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        } catch (NonexistentEntityException ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        } catch (Exception ex) {
            Mensajes.mensajeError("No se logro guardar el comentario");
            Mensajes.mostrarExcepcion(ex);
        }
        dlgComentario.dispose();
    }//GEN-LAST:event_btnSaveCommentActionPerformed

    private void btnCancelCommentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelCommentActionPerformed
        dlgComentario.dispose();
    }//GEN-LAST:event_btnCancelCommentActionPerformed

    private void lab_finalizarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_lab_finalizarMousePressed

    private void lab_finalizarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lab_finalizarMouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_lab_finalizarMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_mo_IVisualv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Frm_mo_IVisualv2 dialog = new Frm_mo_IVisualv2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelComment;
    private javax.swing.JButton btnComentario;
    private javax.swing.JButton btnSaveComment;
    private javax.swing.JButton btn_finalizar;
    private javax.swing.JDialog dlgComentario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lab_acondicionamiento;
    private javax.swing.JLabel lab_enesenanza;
    private javax.swing.JLabel lab_finalizar;
    private javax.swing.JLabel lab_sistemasDeFrenos;
    private javax.swing.JLabel labl_descripcion;
    private javax.swing.JTextArea txtComentario;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = 0;
}
