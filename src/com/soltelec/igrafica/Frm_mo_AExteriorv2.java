/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.soltelec.igrafica;

import com.soltelec.dao.HojaPruebasJpaController;
import com.soltelec.dao.VehiculosJpaController;
import com.soltelec.model.Defxplaca;
import com.soltelec.model.DefxplacaPK;
import com.soltelec.model.HojaPruebas;
import com.soltelec.model.Vehiculos;
import com.soltelec.modulopuc.configuracion.modelo.Conexion;
import com.soltelec.modulopuc.utilidades.Mensajes;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Properties;
import javax.swing.JOptionPane;

/**
 *
 * @author GerenciaDesarrollo
 */
public class Frm_mo_AExteriorv2 extends javax.swing.JDialog {

    /**
     * Creates new form Frm_mo_AExteriorv2
     */
    final int alta = 100;
    final int baja = 1;
    private int defecto;
    private int contadorA = 0;
    private int contadorB = 0;
    private int hojaPruebasActual;
    private int idPrueba;
    private String cadenaRExterior = "\n";
    private String grupo = "";
    private int idVehiculo;
    private boolean aprobado = true;
    //AGREGAR A LA CADENA EL TITULO DEL GRUPO CORRESPONDIENTE, esto por que hay varios grupos en una misma ventana
    private boolean carroceriaEstablecido = false;
    private boolean retrovisoresEstablecido = false;
    private boolean alumbradoEstablecido = false;
    private boolean luxometroEstablecido = false;
    private boolean chasisEstablecido = false;
    //---Conexi√≥n por JDBC
    private Connection conexion;
    private String usuario;
    private String password;
    private String direccionIP;
    static final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(Frm_mo_AExteriorv2.class);
    private int flagCarroceriaChasis=0;
    

    NoReiniciable nrei;
    int valor;

    Frm_mo_AExteriorv2() 
    {   
    }

    public NoReiniciable getNrei() {
        return nrei;
    }

    public void setNrei(NoReiniciable nrei) {
        this.nrei = nrei;
    }

    public Frm_mo_AExteriorv2(java.awt.Frame parent, boolean modal, int idVehiculo, int hojaPruebasActual, int idPrueba) {
        super(parent, modal);
        this.idVehiculo = idVehiculo;
        this.hojaPruebasActual = hojaPruebasActual;
        this.idPrueba = idPrueba;
        initComponents();
        Dimension d = Toolkit.getDefaultToolkit().getScreenSize();
        setSize(d);
        setResizable(false);
        inicializarRadioButton();
    }
    
    public void inicializarRadioButton() 
    {
        AlumbradoSenalizacionGroup1NO.setSelected(true);
        AlumbradoSenalizacionGroup2NO.setSelected(true);
        AlumbradoSenalizacionGroup3NO.setSelected(true);
        AlumbradoSenalizacionGroup4NO.setSelected(true);
        AlumbradoSenalizacionGroup5NO.setSelected(true);
        BociPitAcuGrupo1NO.setSelected(true);
        CarroceriaGrupo1NO.setSelected(true);
        CarroceriaGrupo2NO.setSelected(true);
        CarroceriaGrupo3NO.setSelected(true);
        CarroceriaGrupo4NO.setSelected(true);
        CarroceriaGrupo5NO.setSelected(true);
        CarroceriaGrupo6NO.setSelected(true);
        RetrovisoresGroupo1NO.setSelected(true);
        RetrovisoresGroupo2NO.setSelected(true);
        RuidoGrupo1NO.setSelected(true);
        SillinReposaPiesGroupo1NO.setSelected(true);
    }
    
    
    public Frm_mo_AExteriorv2(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
//        inicializarRadioButton();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        CarroceriaCGrupo1 = new javax.swing.ButtonGroup();
        CarroceriaCGrupo2 = new javax.swing.ButtonGroup();
        CarroceriaCGrupo3 = new javax.swing.ButtonGroup();
        CarroceriaCGrupo4 = new javax.swing.ButtonGroup();
        CarroceriaCGrupo5 = new javax.swing.ButtonGroup();
        CarroceriaCGrupo6 = new javax.swing.ButtonGroup();
        RuidoGrupo1 = new javax.swing.ButtonGroup();
        BociPitAcuGrupo1 = new javax.swing.ButtonGroup();
        RetrovisoresGroup1 = new javax.swing.ButtonGroup();
        RetrovisoresGroup2 = new javax.swing.ButtonGroup();
        SillinReposaPiesGroupo1 = new javax.swing.ButtonGroup();
        AlumbradoSenalizacionGroup1 = new javax.swing.ButtonGroup();
        AlumbradoSenalizacionGroup2 = new javax.swing.ButtonGroup();
        AlumbradoSenalizacionGroup3 = new javax.swing.ButtonGroup();
        AlumbradoSenalizacionGroup4 = new javax.swing.ButtonGroup();
        AlumbradoSenalizacionGroup5 = new javax.swing.ButtonGroup();
        jPanel8 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel7 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        CarroceriaGrupo1NA = new javax.swing.JRadioButton();
        CarroceriaGrupo1SI = new javax.swing.JRadioButton();
        CarroceriaGrupo1NO = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CarroceriaGrupo2NA = new javax.swing.JRadioButton();
        CarroceriaGrupo2SI = new javax.swing.JRadioButton();
        CarroceriaGrupo2NO = new javax.swing.JRadioButton();
        jPanel10 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        CarroceriaGrupo3NA = new javax.swing.JRadioButton();
        CarroceriaGrupo3SI = new javax.swing.JRadioButton();
        CarroceriaGrupo3NO = new javax.swing.JRadioButton();
        jPanel11 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        CarroceriaGrupo4NA = new javax.swing.JRadioButton();
        CarroceriaGrupo4SI = new javax.swing.JRadioButton();
        CarroceriaGrupo4NO = new javax.swing.JRadioButton();
        jPanel12 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        CarroceriaGrupo5NA = new javax.swing.JRadioButton();
        CarroceriaGrupo5SI = new javax.swing.JRadioButton();
        CarroceriaGrupo5NO = new javax.swing.JRadioButton();
        jPanel13 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        CarroceriaGrupo6NA = new javax.swing.JRadioButton();
        CarroceriaGrupo6SI = new javax.swing.JRadioButton();
        CarroceriaGrupo6NO = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        RetrovisoresGroupo1NA = new javax.swing.JRadioButton();
        RetrovisoresGroupo1SI = new javax.swing.JRadioButton();
        RetrovisoresGroupo1NO = new javax.swing.JRadioButton();
        jPanel17 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        RetrovisoresGroupo2NA = new javax.swing.JRadioButton();
        RetrovisoresGroupo2SI = new javax.swing.JRadioButton();
        RetrovisoresGroupo2NO = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel18 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        SillinReposaPiesGroupo1NA = new javax.swing.JRadioButton();
        SillinReposaPiesGroupo1SI = new javax.swing.JRadioButton();
        SillinReposaPiesGroupo1NO = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        RuidoGrupo1NA = new javax.swing.JRadioButton();
        RuidoGrupo1SI = new javax.swing.JRadioButton();
        RuidoGrupo1NO = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        BociPitAcuGrupo1NA = new javax.swing.JRadioButton();
        BociPitAcuGrupo1SI = new javax.swing.JRadioButton();
        BociPitAcuGrupo1NO = new javax.swing.JRadioButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel19 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        AlumbradoSenalizacionGroup1NA = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup1SI = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup1NO = new javax.swing.JRadioButton();
        jPanel20 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        AlumbradoSenalizacionGroup2NA = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup2SI = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup2NO = new javax.swing.JRadioButton();
        jPanel21 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        AlumbradoSenalizacionGroup3NA = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup3SI = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup3NO = new javax.swing.JRadioButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        AlumbradoSenalizacionGroup4NA = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup4SI = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup4NO = new javax.swing.JRadioButton();
        jPanel23 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        AlumbradoSenalizacionGroup5NA = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup5SI = new javax.swing.JRadioButton();
        AlumbradoSenalizacionGroup5NO = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("ACONDICIONAMIENTO EXTERIOR - SILLIN Y REPOSAPIES - ELEMENTOS PARA PRODUCIR RUIDO - ALUMBRADO");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel6.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel4.setText("<html>Partes exteriores en mal estado (flojas, sueltas), que presenten peligro para los dem√°s <br> usuarios de la via</html>");
        jPanel6.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo1.add(CarroceriaGrupo1NA);
        CarroceriaGrupo1NA.setText("NA");
        jPanel6.add(CarroceriaGrupo1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo1.add(CarroceriaGrupo1SI);
        CarroceriaGrupo1SI.setText("SI");
        jPanel6.add(CarroceriaGrupo1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo1.add(CarroceriaGrupo1NO);
        CarroceriaGrupo1NO.setText("NO");
        jPanel6.add(CarroceriaGrupo1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jPanel9.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel5.setText("Presencia de aristas o bordes cortantes exteriores en el veh√≠culo");
        jPanel9.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo2.add(CarroceriaGrupo2NA);
        CarroceriaGrupo2NA.setText("NA");
        jPanel9.add(CarroceriaGrupo2NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo2.add(CarroceriaGrupo2SI);
        CarroceriaGrupo2SI.setText("SI");
        jPanel9.add(CarroceriaGrupo2SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo2.add(CarroceriaGrupo2NO);
        CarroceriaGrupo2NO.setText("NO");
        jPanel9.add(CarroceriaGrupo2NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 720, -1));

        jPanel10.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel6.setText("Roce o interferencia entre las llantas y el guardabarros, chasis o suspensi√≥n");
        jPanel10.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo3.add(CarroceriaGrupo3NA);
        CarroceriaGrupo3NA.setText("NA");
        jPanel10.add(CarroceriaGrupo3NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo3.add(CarroceriaGrupo3SI);
        CarroceriaGrupo3SI.setText("SI");
        jPanel10.add(CarroceriaGrupo3SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo3.add(CarroceriaGrupo3NO);
        CarroceriaGrupo3NO.setText("NO");
        jPanel10.add(CarroceriaGrupo3NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 720, -1));

        jPanel11.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel11.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel7.setText("Corrosi√≥n exterior en elementos diferentes al chasis");
        jPanel11.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo4.add(CarroceriaGrupo4NA);
        CarroceriaGrupo4NA.setText("NA");
        jPanel11.add(CarroceriaGrupo4NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo4.add(CarroceriaGrupo4SI);
        CarroceriaGrupo4SI.setText("SI");
        jPanel11.add(CarroceriaGrupo4SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo4.add(CarroceriaGrupo4NO);
        CarroceriaGrupo4NO.setText("NO");
        jPanel11.add(CarroceriaGrupo4NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 720, -1));

        jPanel12.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel12.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel8.setText("Corrosi√≥n en chasis");
        jPanel12.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo5.add(CarroceriaGrupo5NA);
        CarroceriaGrupo5NA.setText("NA");
        jPanel12.add(CarroceriaGrupo5NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo5.add(CarroceriaGrupo5SI);
        CarroceriaGrupo5SI.setText("SI");
        jPanel12.add(CarroceriaGrupo5SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo5.add(CarroceriaGrupo5NO);
        CarroceriaGrupo5NO.setText("NO");
        jPanel12.add(CarroceriaGrupo5NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 720, -1));

        jPanel13.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel13.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel9.setText("Roturas, perforaciones, desacople o inexistencia del sistema de escape");
        jPanel13.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        CarroceriaCGrupo6.add(CarroceriaGrupo6NA);
        CarroceriaGrupo6NA.setText("NA");
        jPanel13.add(CarroceriaGrupo6NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        CarroceriaCGrupo6.add(CarroceriaGrupo6SI);
        CarroceriaGrupo6SI.setText("SI");
        jPanel13.add(CarroceriaGrupo6SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        CarroceriaCGrupo6.add(CarroceriaGrupo6NO);
        CarroceriaGrupo6NO.setText("NO");
        jPanel13.add(CarroceriaGrupo6NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel7.add(jPanel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 720, -1));

        jTabbedPane1.addTab("Carrocer√≠a y Chasis", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/1334257877_muscle_car.png")), jPanel7); // NOI18N

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel16.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel16.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel12.setText("<HTML>La inexistencia de cualquiera de los dos espejos retrovisores funcionales</HTML>");
        jPanel16.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        RetrovisoresGroup1.add(RetrovisoresGroupo1NA);
        RetrovisoresGroupo1NA.setText("NA");
        jPanel16.add(RetrovisoresGroupo1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        RetrovisoresGroup1.add(RetrovisoresGroupo1SI);
        RetrovisoresGroupo1SI.setText("SI");
        jPanel16.add(RetrovisoresGroupo1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        RetrovisoresGroup1.add(RetrovisoresGroupo1NO);
        RetrovisoresGroupo1NO.setText("NO");
        jPanel16.add(RetrovisoresGroupo1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel1.add(jPanel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jPanel17.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel17.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel13.setText("Mal estado o fijaci√≥n deficiente de (los) espejo(s) retrovisor(es)");
        jPanel17.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        RetrovisoresGroup2.add(RetrovisoresGroupo2NA);
        RetrovisoresGroupo2NA.setText("NA");
        jPanel17.add(RetrovisoresGroupo2NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        RetrovisoresGroup2.add(RetrovisoresGroupo2SI);
        RetrovisoresGroupo2SI.setText("SI");
        jPanel17.add(RetrovisoresGroupo2SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        RetrovisoresGroup2.add(RetrovisoresGroupo2NO);
        RetrovisoresGroupo2NO.setText("NO");
        jPanel17.add(RetrovisoresGroupo2NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel1.add(jPanel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 720, -1));

        jTabbedPane1.addTab("Retrovisores", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/app_24.png")), jPanel1); // NOI18N

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel18.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel18.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel14.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel14.setText("Sill√≠n y/o reposapi√©s mal anclados o con riesgo de desprendimiento");
        jPanel18.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        SillinReposaPiesGroupo1.add(SillinReposaPiesGroupo1NA);
        SillinReposaPiesGroupo1NA.setText("NA");
        jPanel18.add(SillinReposaPiesGroupo1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        SillinReposaPiesGroupo1.add(SillinReposaPiesGroupo1SI);
        SillinReposaPiesGroupo1SI.setText("SI");
        jPanel18.add(SillinReposaPiesGroupo1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        SillinReposaPiesGroupo1.add(SillinReposaPiesGroupo1NO);
        SillinReposaPiesGroupo1NO.setText("NO");
        jPanel18.add(SillinReposaPiesGroupo1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel2.add(jPanel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jTabbedPane1.addTab("Sillin y reposapies", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/video_pause_24.png")), jPanel2); // NOI18N

        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel14.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel14.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel10.setText("<html>Existencia de algu√≠n tipo de dispositivo o accesorio dise√±ado para producir ruido <br> o motocicletas sin silenciador</html>");
        jPanel14.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        RuidoGrupo1.add(RuidoGrupo1NA);
        RuidoGrupo1NA.setText("NA");
        jPanel14.add(RuidoGrupo1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        RuidoGrupo1.add(RuidoGrupo1SI);
        RuidoGrupo1SI.setText("SI");
        jPanel14.add(RuidoGrupo1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        RuidoGrupo1.add(RuidoGrupo1NO);
        RuidoGrupo1NO.setText("NO");
        jPanel14.add(RuidoGrupo1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel3.add(jPanel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jTabbedPane1.addTab("Dispositivos de ruido no permitidos", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/sound_24.png")), jPanel3); // NOI18N

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel15.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel15.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel11.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel11.setText("El no funcionamiento o inexistencia de la bocina, pito o dispositivo ac√∫stico");
        jPanel15.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        BociPitAcuGrupo1.add(BociPitAcuGrupo1NA);
        BociPitAcuGrupo1NA.setText("NA");
        jPanel15.add(BociPitAcuGrupo1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        BociPitAcuGrupo1.add(BociPitAcuGrupo1SI);
        BociPitAcuGrupo1SI.setText("SI");
        jPanel15.add(BociPitAcuGrupo1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        BociPitAcuGrupo1.add(BociPitAcuGrupo1NO);
        BociPitAcuGrupo1NO.setText("NO");
        jPanel15.add(BociPitAcuGrupo1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel4.add(jPanel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jTabbedPane1.addTab("Bocina, pito o dispositivo ac√∫stico", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/speaker_24.png")), jPanel4); // NOI18N

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel19.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel19.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel15.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel15.setText("<html>El no funcionamiento o inexistencia de los comandos que encienden y conmutan las<br/> luces.</html>");
        jPanel19.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        AlumbradoSenalizacionGroup1.add(AlumbradoSenalizacionGroup1NA);
        AlumbradoSenalizacionGroup1NA.setText("NA");
        jPanel19.add(AlumbradoSenalizacionGroup1NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        AlumbradoSenalizacionGroup1.add(AlumbradoSenalizacionGroup1SI);
        AlumbradoSenalizacionGroup1SI.setText("SI");
        jPanel19.add(AlumbradoSenalizacionGroup1SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        AlumbradoSenalizacionGroup1.add(AlumbradoSenalizacionGroup1NO);
        AlumbradoSenalizacionGroup1NO.setText("NO");
        jPanel19.add(AlumbradoSenalizacionGroup1NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel5.add(jPanel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 720, 40));

        jPanel20.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel20.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel16.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel16.setText("<HTML>Mal estado (con riesgo de desprendimiento o ausencia de las pastas o vidrios)<BR> o no funcionamiento del sistema o cualquiera de las luces direccionales</HTML>");
        jPanel20.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        AlumbradoSenalizacionGroup2.add(AlumbradoSenalizacionGroup2NA);
        AlumbradoSenalizacionGroup2NA.setText("NA");
        jPanel20.add(AlumbradoSenalizacionGroup2NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        AlumbradoSenalizacionGroup2.add(AlumbradoSenalizacionGroup2SI);
        AlumbradoSenalizacionGroup2SI.setText("SI");
        jPanel20.add(AlumbradoSenalizacionGroup2SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        AlumbradoSenalizacionGroup2.add(AlumbradoSenalizacionGroup2NO);
        AlumbradoSenalizacionGroup2NO.setText("NO");
        jPanel20.add(AlumbradoSenalizacionGroup2NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel5.add(jPanel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 720, 40));

        jPanel21.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel17.setText("<HTML>Mal estado (con riesgo de desprendimiento o ausencia de las pastas o vidrios)<BR> o no funcionamiento de cualquiera de la(s) luz(luces) de parada o freno.</HTML>");
        jPanel21.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        AlumbradoSenalizacionGroup3.add(AlumbradoSenalizacionGroup3NA);
        AlumbradoSenalizacionGroup3NA.setText("NA");
        jPanel21.add(AlumbradoSenalizacionGroup3NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        AlumbradoSenalizacionGroup3.add(AlumbradoSenalizacionGroup3SI);
        AlumbradoSenalizacionGroup3SI.setText("SI");
        jPanel21.add(AlumbradoSenalizacionGroup3SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        AlumbradoSenalizacionGroup3.add(AlumbradoSenalizacionGroup3NO);
        AlumbradoSenalizacionGroup3NO.setText("NO");
        jPanel21.add(AlumbradoSenalizacionGroup3NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel5.add(jPanel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 90, 720, 40));

        jPanel22.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel22.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel18.setText("Mal estado o el no funcionamiento de las luces del tablero de instrumentos.");
        jPanel22.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 40));

        AlumbradoSenalizacionGroup4.add(AlumbradoSenalizacionGroup4NA);
        AlumbradoSenalizacionGroup4NA.setText("NA");
        jPanel22.add(AlumbradoSenalizacionGroup4NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        AlumbradoSenalizacionGroup4.add(AlumbradoSenalizacionGroup4SI);
        AlumbradoSenalizacionGroup4SI.setText("SI");
        jPanel22.add(AlumbradoSenalizacionGroup4SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        AlumbradoSenalizacionGroup4.add(AlumbradoSenalizacionGroup4NO);
        AlumbradoSenalizacionGroup4NO.setText("NO");
        jPanel22.add(AlumbradoSenalizacionGroup4NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel5.add(jPanel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 720, 40));

        jPanel23.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel23.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel19.setFont(new java.awt.Font("Arial", 1, 13)); // NOI18N
        jLabel19.setText("<html>Color de luz emitido diferente o en cantidad inferior a la estipulada en las Normas T√©cnicas Colombianaso disposiciones legales aplicables vigentes</html>");
        jPanel23.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 570, 50));

        AlumbradoSenalizacionGroup5.add(AlumbradoSenalizacionGroup5NA);
        AlumbradoSenalizacionGroup5NA.setText("NA");
        jPanel23.add(AlumbradoSenalizacionGroup5NA, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 10, -1, -1));

        AlumbradoSenalizacionGroup5.add(AlumbradoSenalizacionGroup5SI);
        AlumbradoSenalizacionGroup5SI.setText("SI");
        jPanel23.add(AlumbradoSenalizacionGroup5SI, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 10, -1, -1));

        AlumbradoSenalizacionGroup5.add(AlumbradoSenalizacionGroup5NO);
        AlumbradoSenalizacionGroup5NO.setText("NO");
        jPanel23.add(AlumbradoSenalizacionGroup5NO, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 10, -1, -1));

        jPanel5.add(jPanel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 720, 50));

        jTabbedPane1.addTab("Alumbrado y se√±alizaci√≥n", new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/bulb_on_24.png")), jPanel5); // NOI18N

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/solt.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Serif", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("<html><center>ACONDICIONAMIENTO EXTERIOR <br/> SILLIN Y REPOSAPIES <br/> ELEMENTOS PARA PRODUCIR RUIDO <br/> ALUMBRADO</center></html>");

        guardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/save_24.png"))); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/moto.png"))); // NOI18N

        cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/soltelec/Icon/salir24.png"))); // NOI18N
        cancelar.setText("cancelar");
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 764, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(cancelar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed

//        DefxplacaPK dp = new DefxplacaPK();
//        Defxplaca dp1 = new Defxplaca();
//        HojaPruebas hp = new HojaPruebas();
//        HojaPruebasJpaController hpjc = new HojaPruebasJpaController();
//        hp = hpjc.findHojaPruebas(hojaPruebasActual);
//        Vehiculos v = new Vehiculos();
//        VehiculosJpaController vjc = new VehiculosJpaController();
//        v = vjc.findVehiculos(idVehiculo);
        boolean persistir = false;

        conexion=llamarConexion();
        if (conexion == null)return;
        
//      idPrueba=358407;
        persistir= defectosCarroceriaChasis(persistir);
        
        persistir=defectosDispositivosRuido(persistir);
//        
        persistir=defectosBocinaPitoAcustica(persistir);
      
        persistir=defectosRetrovisores(persistir);
               
        persistir=defectosSillinDescanPies(persistir);       

        persistir=defectosAlumbradoSenalizacion(persistir);
  
        cerrarConexion(persistir);
        
        doClose(0);
        nrei.establecer_oprimido(true);
    }//GEN-LAST:event_guardarActionPerformed
    
    private void cerrarConexion(boolean persistir)
    {
        try 
        {
            if (persistir == true) 
            {
                conexion.commit();
                conexion.setAutoCommit(true);
                JOptionPane.showMessageDialog(this, "Se ha REGISTRADO los Defectos de la Revision Exterior de una Manera Exitosa ");
            }else{
                JOptionPane.showMessageDialog(this, "No se registran datos en la DB");
            }
            conexion.close();
        } catch (SQLException ex) {
            Mensajes.mostrarExcepcion(ex);
        }
    }
    
    
    /**
     * Metodo que captura los defectos para Alumbrado y senalizacion
     * 
     * @autor ELKIN B
     * @param persistir
     * @return 
     */
    private boolean defectosAlumbradoSenalizacion(boolean persistir)
    {
        try 
        {
            if (!AlumbradoSenalizacionGroup1NO.isSelected())
            {
                if (AlumbradoSenalizacionGroup1SI.isSelected()) {
                    persistir = registrarDefectosPrueba(24000, idPrueba);
                } else if (AlumbradoSenalizacionGroup1NA.isSelected()) {
                     persistir = registrarDefectosPruebaNA(24000, idPrueba);
                }
            }
            
            if (!AlumbradoSenalizacionGroup2NO.isSelected()) 
            {
                if (AlumbradoSenalizacionGroup2SI.isSelected()) 
                {
                   persistir = registrarDefectosPrueba(24001, idPrueba);
                } else if (AlumbradoSenalizacionGroup2NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(24001, idPrueba);
                }
            }
            
            if (!AlumbradoSenalizacionGroup3NO.isSelected())
            {
                if (AlumbradoSenalizacionGroup3SI.isSelected()) {
                     persistir = registrarDefectosPrueba(24002, idPrueba);
                } else if (AlumbradoSenalizacionGroup3NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(24002, idPrueba);
                }
            }
            
            if (!AlumbradoSenalizacionGroup4NO.isSelected()) 
            {
                if (AlumbradoSenalizacionGroup4SI.isSelected()) {
                    persistir = registrarDefectosPrueba(24003, idPrueba);
                } else if (AlumbradoSenalizacionGroup4NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(24003, idPrueba);
                }
            }

            if (!AlumbradoSenalizacionGroup5NO.isSelected()) 
            {
                if (AlumbradoSenalizacionGroup5SI.isSelected()) {
                    persistir = registrarDefectosPrueba(24004, idPrueba);
                } else if (AlumbradoSenalizacionGroup5NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(24004, idPrueba);
                }
            }
        } catch (Exception e) {
            System.err.println("Error en el metodo : defectosAlumbradoSenalizacion()" + e.getMessage());
        }
        return persistir;
        
    }
    
    
    /**
     * Metodo que captura los defectos para sillin y descansa pies
     * @autor ELKIN B
     * @param persistir
     * @return 
     */
   private boolean defectosSillinDescanPies(boolean persistir)
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("--Cargando defectos de defectosSillinDescanPies------");
        System.out.println("-----------------------------------------------------");

        try 
        {
            if (!SillinReposaPiesGroupo1NO.isSelected()) 
            {
                if (SillinReposaPiesGroupo1SI.isSelected()) {
                    persistir  = registrarDefectosPrueba(14008, idPrueba);
                } else if (SillinReposaPiesGroupo1NA.isSelected()) {
                     persistir  = registrarDefectosPruebaNA(14008, idPrueba);
                }
            }
        } catch (Exception e) {
             System.err.println("Error en el metodo : defectosSillinDescanPies()" + e.getMessage());
        }
        return persistir;
        
    }
    
    /**
     * Metodo que captura los defectos para retrovisores
     * @autor ELKIN B
     * @param persistir
     * @return 
     */
    private boolean defectosRetrovisores(boolean persistir)
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("--Cargando defectos de defectos Retrovisores----------");
        System.out.println("-----------------------------------------------------");

        try 
        {
            if (!RetrovisoresGroupo1NO.isSelected()) 
            {
                if (RetrovisoresGroupo1SI.isSelected()) 
                {
                    persistir =registrarDefectosPrueba(14006, idPrueba);
                } else if (RetrovisoresGroupo1NA.isSelected()) {
                    persistir =registrarDefectosPruebaNA(14006, idPrueba);
                }
            }

            if (!RetrovisoresGroupo2NO.isSelected()) 
            {
                if (RetrovisoresGroupo2SI.isSelected()) {
                    persistir =registrarDefectosPrueba(14007, idPrueba);
                } else if (RetrovisoresGroupo2NA.isSelected()) {
                    persistir =registrarDefectosPruebaNA(14007, idPrueba);
                }
            }
            
        } catch (Exception e) {
             System.err.println("Error en el metodo : defectosRetrovisores()" + e.getMessage());
        }
        return persistir;
        
    }
    
   
    /**
     * Metodo que captura los defectos para bocina, pito y acustica
     * @autor ELKIN B
     * @param persistir
     * @return 
     */
    private boolean defectosBocinaPitoAcustica(boolean persistir)
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("--Cargando defectos de defectos BocinaPito Acustica--");
        System.out.println("-----------------------------------------------------");

        try 
        {
            if (!BociPitAcuGrupo1NO.isSelected()) 
            {
                if (BociPitAcuGrupo1SI.isSelected()) {
                    persistir = registrarDefectosPrueba(14010, idPrueba);
                } else if (BociPitAcuGrupo1NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(14010, idPrueba);
                }
            }
        } catch (Exception e) {
             System.err.println("Error en el metodo : defectosBocinaPitoAcustica()" + e.getMessage());
        }
        return persistir;
        
    }
    
    
    /**
     * Metodo que captura los defectos para ruido
     * 
     * @autor ELKIN B 
     * @param persistir
     * @return 
     */
    private boolean defectosDispositivosRuido(boolean persistir)
    {
        System.out.println("-----------------------------------------------------");
        System.out.println("--Cargando defectos de Carroceria y chasis---------");
        System.out.println("-----------------------------------------------------");

        try 
        {
            if (!RuidoGrupo1NO.isSelected()) 
            {
                if (RuidoGrupo1SI.isSelected()) {
                    persistir=registrarDefectosPrueba(14009, idPrueba);
                } else if (RuidoGrupo1NA.isSelected()) {
                   persistir=registrarDefectosPruebaNA(14009, idPrueba);
                }
            }
        } catch (Exception e) {
             System.err.println("Error en el metodo : defectosDispositivosRuido()" + e.getMessage());
        }
        return persistir;
        
    }
    
    /**
     * 
     * Metodo que captura los defectos para carroceria y chasis
     * @autor ELKIN B
     * @param persistir
     * @return 
     */
    private boolean defectosCarroceriaChasis(boolean persistir)
    {   
        log.info("-----------------------------------------------------");
        log.info("------Cargando defectos de Carroceria y chasis----");
        log.info("-----------------------------------------------------");
        
        try 
        {   
            if(!CarroceriaGrupo1NO.isSelected())
            {
                if (CarroceriaGrupo1SI.isSelected())
                    persistir = registrarDefectosPrueba(14000, idPrueba);
                else if (CarroceriaGrupo1NA.isSelected())
                    persistir = registrarDefectosPruebaNA(14000, idPrueba);
            }
            
            if (!CarroceriaGrupo2NO.isSelected()) 
            {
                if (CarroceriaGrupo2SI.isSelected()) {
                    persistir = registrarDefectosPrueba(14001, idPrueba);
                } else if (CarroceriaGrupo2NA.isSelected()) 
                {
                    persistir = registrarDefectosPruebaNA(14001, idPrueba);
                }
            }
            
            if (!CarroceriaGrupo3NO.isSelected()) 
            {
                if (CarroceriaGrupo3SI.isSelected()) 
                {
                    persistir = registrarDefectosPrueba(14002, idPrueba);
                } else if (CarroceriaGrupo3NA.isSelected()) {
                   persistir = registrarDefectosPruebaNA(14002, idPrueba);
                }
            }
            
            if (!CarroceriaGrupo4NO.isSelected()) 
            {
                if (CarroceriaGrupo4SI.isSelected()) {
                    persistir = registrarDefectosPrueba(14003, idPrueba);
                } else if (CarroceriaGrupo4NA.isSelected()) {
                    persistir = registrarDefectosPruebaNA(14003, idPrueba);
                }
            }
            
            if (!CarroceriaGrupo5NO.isSelected())
            {
                if (CarroceriaGrupo5SI.isSelected()) {
                   persistir = registrarDefectosPrueba(14004, idPrueba);
                } else if (CarroceriaGrupo5NA.isSelected()) {
                   persistir = registrarDefectosPruebaNA(14004, idPrueba);
                }
            }
            
            if (!CarroceriaGrupo6NO.isSelected())
            {
                if (CarroceriaGrupo6SI.isSelected()) {
                    persistir = registrarDefectosPrueba(14005, idPrueba);
                } else if (CarroceriaGrupo6NA.isSelected()) {
                     persistir = registrarDefectosPruebaNA(14005, idPrueba);
                }
            }

        } catch (Exception e) {
            System.err.println("Error en el metodo : defectosCarroceriaChasis()" + e.getMessage());
        }
        return persistir;
    }
    

    
    /**
     * Metodo que capturar la conexion para la interacion con la db
     * @autor ELKIN B
     */
    public Connection llamarConexion() 
    {
        try 
        {
            Class.forName("com.mysql.jdbc.Driver");
            Connection cn = (com.mysql.jdbc.Connection) DriverManager.getConnection("jdbc:mysql://" + Conexion.getIpServidor() + ":" + Conexion.getPuerto() + "/" + Conexion.getBaseDatos(), Conexion.getUsuario(), Conexion.getContrase√±a());
//            Connection cn = (Connection) DriverManager.getConnection("jdbc:mysql://192.168.0.102:3306/db_cda", "root", "50lt3l3c545");
            cn.setAutoCommit(false);
            return cn;
        } catch (ClassNotFoundException | SQLException ex) {
            
            log.error("Error en el metodo llamarConexion() : PruebaInspecionSencorial: " + ex.getMessage() + ex.toString());
            Mensajes.mostrarExcepcion(ex);
            JOptionPane.showMessageDialog(null, "Error al conectar con la db");
            doClose(0);
        }
        return null;
    }
    
    
    /**
     * Metodo que inserta los defectos selecinados
     * @autor ELKIN B
     */
    private boolean registrarDefectosPrueba(int codigoDefecto, int idPrueba) 
    {
        String sql = "INSERT INTO db_cda.defxprueba(id_defecto,id_prueba) VALUES(?,?)";
        try {
            if (!validacionDefectosregistradoDBPruebaNA(codigoDefecto, idPrueba) && !validacionDefectosregistradoDBPrueba( codigoDefecto, idPrueba))
            {
                conexion.setAutoCommit(false);
                PreparedStatement instruccion = (PreparedStatement) conexion.prepareStatement(sql);
                instruccion.setInt(1, codigoDefecto);
                instruccion.setInt(2, idPrueba);
                instruccion.executeUpdate();
                instruccion.clearParameters();
                return true;
            }

        } catch (SQLException ex) {
            log.info("Error en el metodo : registrarDefectosPrueba()" + ex.getMessage() + ex.getLocalizedMessage());
            Mensajes.mostrarExcepcion(ex);
        }
        return false;
    }
    
    private boolean validacionDefectosregistradoDBPrueba(int codigoDefecto, int idPrueba)
    {
        String select = "SELECT * FROM defxprueba dp WHERE dp.id_defecto=? AND dp.id_prueba=?";
        try {
            PreparedStatement instruccion1 = (PreparedStatement) conexion.prepareStatement(select);
            instruccion1.setInt(1, codigoDefecto);
            instruccion1.setInt(2, idPrueba);
            ResultSet r = instruccion1.executeQuery();
            if (r.next()) {
                log.info("----------------------------ERROR ------------------------------------------");
                log.info("El defecto : " + codigoDefecto + " ya esta asociado a la prueba " + idPrueba);
                log.info("-------------------------------- ------------------------------------------");
                return true;
            }
        } catch (SQLException ex) {
            System.err.println("Error en el metodo : registrarDefectosPruebaNA()" + ex.getMessage());
            Mensajes.mostrarExcepcion(ex);
        }
        return false;
    }
    
    
    /**
     * 
     * @param codigoDefecto
     * @param idPrueba
     * @return 
     */
    private boolean registrarDefectosPruebaNA(int codigoDefecto, int idPrueba) 
    {
        String sql = "INSERT INTO db_cda.defxpruebana(id_defecto,id_prueba) VALUES(?,?)";
        try 
        {
            if (!validacionDefectosregistradoDBPruebaNA(codigoDefecto, idPrueba) && !validacionDefectosregistradoDBPrueba( codigoDefecto, idPrueba))
            {
                conexion.setAutoCommit(false);
                PreparedStatement instruccion = (PreparedStatement) conexion.prepareStatement(sql);
                instruccion.setInt(1, codigoDefecto);
                instruccion.setInt(2, idPrueba);
                instruccion.executeUpdate();
                instruccion.clearParameters();
                return true;
            }
        } catch (SQLException ex) {
            System.err.println("Error en el metodo : registrarDefectosPruebaNA()" + ex.getMessage());
            Mensajes.mostrarExcepcion(ex);
        }
        return false;
    }

    private boolean validacionDefectosregistradoDBPruebaNA(int codigoDefecto, int idPrueba)
    {
        String select = "SELECT * FROM defxpruebana dp WHERE dp.id_defecto=? AND dp.id_prueba=?";
        try {
            PreparedStatement instruccion1 = (PreparedStatement) conexion.prepareStatement(select);
            instruccion1.setInt(1, codigoDefecto);
            instruccion1.setInt(2, idPrueba);
            ResultSet r = instruccion1.executeQuery();
            if (r.next()) {
                log.info("----------------------------ERROR ------------------------------------------");
                log.info("El defecto : " + codigoDefecto + " ya esta asociado a la prueba " + idPrueba);
                log.info("-------------------------------- ------------------------------------------");
                return true;
            }
        } catch (SQLException ex) {
            System.err.println("Error en el metodo : validacionDefectosregistradoDBPruebaNA()" + ex.getMessage());
            Mensajes.mostrarExcepcion(ex);
        }
        return false;
    }


   
    
    
    
    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
        doClose(returnStatus);
    }//GEN-LAST:event_cancelarActionPerformed
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /////////////////////////////////M√âTODOS SOBRE LA FUNCIONALIDAD //////////////////////////////
    public void establecerCantidadProblemas(int contadorA, int contadorB) {
        this.contadorA = contadorA;
        this.contadorB = contadorB;
    }

    public int obtenerCantidadProblemasA() {
        return contadorA;
    }

    public int obtenerCantidadProblemasB() {
        return contadorB;
    }

    public void establecerAprobado(int defecto) {
        if (defecto >= 100) {
            aprobado = false;
        }
        //TODO: Mirar si es un camion, una moto, un cuatriciclo, pq cada uno tiene un n√∫mero m√°ximo de rechazos
        //diferente, para carros normales es 10.
        if (defecto >= 10) {
            aprobado = false;
        }
    }

    public boolean obtenberAprobado() {
        return aprobado;
    }

    public void establecerNombreProblema(String cadenaRExterior) {
        this.cadenaRExterior += cadenaRExterior + "\n";
    }

    public String obtenerNombreProblema() {
        return cadenaRExterior;
    }

    public void establecerGrupo(String grupo) {
        this.grupo = grupo;
    }

    public String obtenerGrupo() {
        return grupo;
    }
    /////////////////////////////////////////////////////////////////////////////////////

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frm_mo_AExteriorv2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Frm_mo_AExteriorv2 dialog = new Frm_mo_AExteriorv2(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup AlumbradoSenalizacionGroup1;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup1NA;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup1NO;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup1SI;
    private javax.swing.ButtonGroup AlumbradoSenalizacionGroup2;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup2NA;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup2NO;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup2SI;
    private javax.swing.ButtonGroup AlumbradoSenalizacionGroup3;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup3NA;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup3NO;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup3SI;
    private javax.swing.ButtonGroup AlumbradoSenalizacionGroup4;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup4NA;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup4NO;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup4SI;
    private javax.swing.ButtonGroup AlumbradoSenalizacionGroup5;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup5NA;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup5NO;
    private javax.swing.JRadioButton AlumbradoSenalizacionGroup5SI;
    private javax.swing.ButtonGroup BociPitAcuGrupo1;
    private javax.swing.JRadioButton BociPitAcuGrupo1NA;
    private javax.swing.JRadioButton BociPitAcuGrupo1NO;
    private javax.swing.JRadioButton BociPitAcuGrupo1SI;
    private javax.swing.ButtonGroup CarroceriaCGrupo1;
    private javax.swing.ButtonGroup CarroceriaCGrupo2;
    private javax.swing.ButtonGroup CarroceriaCGrupo3;
    private javax.swing.ButtonGroup CarroceriaCGrupo4;
    private javax.swing.ButtonGroup CarroceriaCGrupo5;
    private javax.swing.ButtonGroup CarroceriaCGrupo6;
    private javax.swing.JRadioButton CarroceriaGrupo1NA;
    private javax.swing.JRadioButton CarroceriaGrupo1NO;
    private javax.swing.JRadioButton CarroceriaGrupo1SI;
    private javax.swing.JRadioButton CarroceriaGrupo2NA;
    private javax.swing.JRadioButton CarroceriaGrupo2NO;
    private javax.swing.JRadioButton CarroceriaGrupo2SI;
    private javax.swing.JRadioButton CarroceriaGrupo3NA;
    private javax.swing.JRadioButton CarroceriaGrupo3NO;
    private javax.swing.JRadioButton CarroceriaGrupo3SI;
    private javax.swing.JRadioButton CarroceriaGrupo4NA;
    private javax.swing.JRadioButton CarroceriaGrupo4NO;
    private javax.swing.JRadioButton CarroceriaGrupo4SI;
    private javax.swing.JRadioButton CarroceriaGrupo5NA;
    private javax.swing.JRadioButton CarroceriaGrupo5NO;
    private javax.swing.JRadioButton CarroceriaGrupo5SI;
    private javax.swing.JRadioButton CarroceriaGrupo6NA;
    private javax.swing.JRadioButton CarroceriaGrupo6NO;
    private javax.swing.JRadioButton CarroceriaGrupo6SI;
    private javax.swing.ButtonGroup RetrovisoresGroup1;
    private javax.swing.ButtonGroup RetrovisoresGroup2;
    private javax.swing.JRadioButton RetrovisoresGroupo1NA;
    private javax.swing.JRadioButton RetrovisoresGroupo1NO;
    private javax.swing.JRadioButton RetrovisoresGroupo1SI;
    private javax.swing.JRadioButton RetrovisoresGroupo2NA;
    private javax.swing.JRadioButton RetrovisoresGroupo2NO;
    private javax.swing.JRadioButton RetrovisoresGroupo2SI;
    private javax.swing.ButtonGroup RuidoGrupo1;
    private javax.swing.JRadioButton RuidoGrupo1NA;
    private javax.swing.JRadioButton RuidoGrupo1NO;
    private javax.swing.JRadioButton RuidoGrupo1SI;
    private javax.swing.ButtonGroup SillinReposaPiesGroupo1;
    private javax.swing.JRadioButton SillinReposaPiesGroupo1NA;
    private javax.swing.JRadioButton SillinReposaPiesGroupo1NO;
    private javax.swing.JRadioButton SillinReposaPiesGroupo1SI;
    private javax.swing.JButton cancelar;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables
    private int returnStatus = 0;
}
